const S=Math.sin,C=Math.cos,Rn=Math.random;var audioConsent=!1;const scratchCanvas=document.createElement("canvas"),sctx=scratchCanvas.getContext("2d",{alpha:!0,antialias:!0,desynchronized:!0,premultipliedAlpha:!1}),scratchImage=new Image,moduleBase="https://srmcgann.github.io/Coordinates";var cacheItem;const cache={objFiles:[],customShapes:[],textures:[],geometry:[],texImages:[]},Renderer=async e=>{var a=0,r=0,t=0,o=1920,n=1080,i=0,l=0,c=0,s=2e3,f=!0,h=10,p=!1,m=.2,u=!1,d={mode:"webgl2",options:{alpha:!0,antialias:!0,desynchronized:!0,premultipliedAlpha:!1}};void 0!==e&&Object.keys(e).forEach(((g,y)=>{switch(g.toLowerCase()){case"width":o=e[g];break;case"height":n=e[g];break;case"alpha":u=e[g];break;case"x":a=e[g];break;case"y":r=e[g];break;case"z":t=e[g];break;case"roll":i=e[g];break;case"pitch":l=e[g];break;case"yaw":c=e[g];break;case"fov":s=e[g];break;case"clearcolor":e[g];break;case"attachTobody":f=!!e[g];break;case"exportgpuspecs":p=!!e[g];break;case"margin":h=e[g];break;case"ambientlight":m=e[g];break;case"context":d.mode=e[g].mode,d.options=e[g].options}}));const g=document.createElement("canvas"),y=g.getContext(d.mode,d.options);g.width=o,g.height=n;const v=d[0];if(console.log(`GLSL version: ${y.getParameter(y.SHADING_LANGUAGE_VERSION)}`),p&&getParams(y),"2d"===v);else y.viewport(0,0,g.width,g.height);var R;f&&(g.style.display="block",g.style.position="absolute",g.style.left="50vw",g.style.top="50vh",g.style.transform="translate(-50%, -50%)",g.style.border="1px solid #fff3",g.style.background="#000",document.body.appendChild(g)),window.addEventListener("resize",R=e=>{var a,r=document.body,t=0!==g.width?g.height/g.width:1;r.clientHeight/r.clientWidth>t?(g.style.width=(a=r.clientWidth)-2*h+"px",g.style.height=a*t-2*h+"px"):(g.style.height=(a=r.clientHeight)-2*h+"px",g.style.width=a/t-2*h+"px")}),R();var A={c:g,ctx:y,contextType:v,t:0,alpha:u,width:o,height:n,x:a,y:r,z:t,roll:i,pitch:l,yaw:c,fov:s,ready:!1,ambientLight:m,pointLights:[],pointLightCols:[],alphaQueue:[]};A["2d"==v?"ctx":"gl"]=y;var b=A;b.Clear=()=>{if("2d"===v)g.width=b.c.width;else y.clearColor(0,0,0,1),y.clear(y.COLOR_BUFFER_BIT),y.clear(y.DEPTH_BUFFER_BIT)};return b.Draw=async(e,a=!1,r=!1)=>{var t=e.shader.datasets[e.datasetIdx],o=t.program;if(void 0!==e?.shader)if(!a&&(e.isSprite||e.isLight&&e.showSource))b.alphaQueue=[e,...b.alphaQueue];else if(!a&&e.isParticle)b.alphaQueue=[e,...b.alphaQueue];else if(y.useProgram(o),"particles"==e.shapeType)b.ctx.blendFunc(y.ONE,y.SRC_ALPHA),b.ctx.enable(y.BLEND),y.uniform1f(t.locPointSize,e.size*r?3:1),y.uniform1f(t.locIsParticle,e.isParticle),y.uniform1f(t.locPenumbraPass,e.penumbraPass?1:0),y.uniform1f(t.locT,b.t),y.uniform1f(t.locColorMix,e.colorMix),y.uniform1f(t.locIsSprite,e.isSprite),y.uniform1f(t.locIsLight,e.isLight),y.uniform1f(t.locAlpha,r?e.alpha*e.penumbra:e.alpha),y.uniform3f(t.locColor,...HexToRGB(e.color)),y.uniform1f(t.locAmbientLight,l/8),y.uniform2f(t.locResolution,b.width,b.height),y.uniform3f(t.locCamPos,b.x,b.y,b.z),y.uniform3f(t.locCamOri,b.roll,b.pitch,b.yaw),y.uniform3f(t.locGeoPos,e.x,e.y,e.z),y.uniform3f(t.locGeoOri,e.roll,e.pitch,e.yaw),y.uniform1f(t.locFov,b.fov),y.uniform1f(t.locEquirectangular,e.equirectangular?1:0),y.uniform1f(t.locRenderNormals,0),e?.vertices?.length&&(y.bindBuffer(y.ARRAY_BUFFER,e.vertex_buffer),y.bufferData(y.ARRAY_BUFFER,e.vertices,y.STATIC_DRAW),y.bindBuffer(y.ELEMENT_ARRAY_BUFFER,e.Vertex_Index_Buffer),y.bufferData(y.ELEMENT_ARRAY_BUFFER,e.vIndices,y.STATIC_DRAW),y.bindBuffer(y.ARRAY_BUFFER,e.vertex_buffer),y.bindBuffer(y.ELEMENT_ARRAY_BUFFER,e.Vertex_Index_Buffer),t.locPosition=y.getAttribLocation(t.program,"position"),y.vertexAttribPointer(t.locPosition,3,y.FLOAT,!1,0,0),y.enableVertexAttribArray(t.locPosition),y.drawElements(y.POINTS,e.vertices.length/3|0,y.UNSIGNED_INT,0),y.bindBuffer(y.ELEMENT_ARRAY_BUFFER,null),y.bindBuffer(y.ARRAY_BUFFER,null)),b.ctx.blendFunc(y.ONE,y.ZERO),b.ctx.disable(y.BLEND);else{y.activeTexture(y.TEXTURE0),"video"==e.textureMode&&BindImage(y,t.resource,t.texture,e.textureMode,b.t,e.map),y.uniform1i(t.locTexture,t.texture),y.bindTexture(y.TEXTURE_2D,t.texture),y.uniform1i(t.locPointLightCount,b.pointLights.length);var n=new Float32Array,i=new Float32Array;b.pointLights.map((e=>{n=[...n,e.x,e.y,e.z,e.lum];HexToRGB(e.color);i=[...i,...HexToRGB(e.color),1]})),n.length&&(y.uniform4fv(t.locPointLights,n),y.uniform4fv(t.locPointLightCols,i));var l=b.ambientLight;t.optionalLighting.map((e=>{if("ambientLight"===e.name)l=e.value})),y.useProgram(o),t.optionalUniforms.map((a=>{if("object"==typeof a?.loc)switch(y[a.dataType](a.loc,a.value),y.uniform1f(a.locFlatShading,a.flatShading?1:0),a.name){case"reflection":y.activeTexture(y.TEXTURE1),"video"==a.textureMode&&BindImage(y,a.video,a.refTexture,a.textureMode,b.t,a.map),y.activeTexture(y.TEXTURE1),y.uniform1i(a.locRefTexture,1),y.bindTexture(y.TEXTURE_2D,a.refTexture),y.uniform1f(a.locRefOmitEquirectangular,"rectangle"==e.shapeType||"point light"==e.shapeType||"sprite"==e.shapeType?1:0);break;case"phong":a.locPhongTheta=y.getUniformLocation(t.program,"phongTheta"),y.uniform1f(a.locPhongTheta,a.theta)}})),y.uniform1f(t.locT,b.t),y.uniform1f(t.locIsParticle,e.isParticle),y.uniform1f(t.locPenumbraPass,0),y.uniform1f(t.locColorMix,e.colorMix),y.uniform1f(t.locIsSprite,e.isSprite),y.uniform1f(t.locIsLight,e.isLight),y.uniform1f(t.locAlpha,e.alpha),y.uniform3f(t.locColor,...HexToRGB(e.color)),y.uniform1f(t.locAmbientLight,l/8),y.uniform2f(t.locResolution,b.width,b.height),y.uniform3f(t.locCamPos,b.x,b.y,b.z),y.uniform3f(t.locCamOri,b.roll,b.pitch,b.yaw),y.uniform3f(t.locGeoPos,e.x,e.y,e.z),y.uniform3f(t.locGeoOri,e.roll,e.pitch,e.yaw),y.uniform1f(t.locFov,b.fov),y.uniform1f(t.locEquirectangular,e.equirectangular?1:0),y.uniform1f(t.locRenderNormals,0),y.bindBuffer(y.ARRAY_BUFFER,e.uv_buffer),y.bufferData(y.ARRAY_BUFFER,e.uvs,y.STATIC_DRAW),y.bindBuffer(y.ELEMENT_ARRAY_BUFFER,e.UV_Index_Buffer),y.bufferData(y.ELEMENT_ARRAY_BUFFER,e.uvIndices,y.STATIC_DRAW),y.vertexAttribPointer(t.locUv,2,y.FLOAT,!1,0,0),y.bindBuffer(y.ELEMENT_ARRAY_BUFFER,null),y.bindBuffer(y.ARRAY_BUFFER,null),e?.normalVecs.length&&(y.bindBuffer(y.ARRAY_BUFFER,e.normalVec_buffer),y.bufferData(y.ARRAY_BUFFER,e.normalVecs,y.STATIC_DRAW),y.bindBuffer(y.ELEMENT_ARRAY_BUFFER,e.NormalVec_Index_Buffer),y.bufferData(y.ELEMENT_ARRAY_BUFFER,e.nIndices,y.STATIC_DRAW),y.bindBuffer(y.ARRAY_BUFFER,e.normalVec_buffer),y.bindBuffer(y.ELEMENT_ARRAY_BUFFER,e.NormalVec_Index_Buffer),t.locNormalVec=y.getAttribLocation(t.program,"normalVec"),y.vertexAttribPointer(t.locNormalVec,3,y.FLOAT,!1,0,0),y.enableVertexAttribArray(t.locNormalVec),y.bindBuffer(y.ELEMENT_ARRAY_BUFFER,null),y.bindBuffer(y.ARRAY_BUFFER,null)),e?.vertices?.length&&(y.bindBuffer(y.ARRAY_BUFFER,e.vertex_buffer),y.bufferData(y.ARRAY_BUFFER,e.vertices,y.STATIC_DRAW),y.bindBuffer(y.ELEMENT_ARRAY_BUFFER,e.Vertex_Index_Buffer),y.bufferData(y.ELEMENT_ARRAY_BUFFER,e.vIndices,y.STATIC_DRAW),y.bindBuffer(y.ARRAY_BUFFER,e.vertex_buffer),y.bindBuffer(y.ELEMENT_ARRAY_BUFFER,e.Vertex_Index_Buffer),t.locPosition=y.getAttribLocation(t.program,"position"),y.vertexAttribPointer(t.locPosition,3,y.FLOAT,!1,0,0),y.enableVertexAttribArray(t.locPosition),y.drawElements(e.wireframe?y.LINES:y.TRIANGLES,e.vertices.length/3|0,y.UNSIGNED_INT,0),y.bindBuffer(y.ELEMENT_ARRAY_BUFFER,null),y.bindBuffer(y.ARRAY_BUFFER,null)),y.uniform1f(t.locRenderNormals,e.showNormals?1:0),e.showNormals&&e?.normals?.length&&(y.bindBuffer(y.ARRAY_BUFFER,e.normal_buffer),y.bufferData(y.ARRAY_BUFFER,e.normals,y.STATIC_DRAW),y.bindBuffer(y.ELEMENT_ARRAY_BUFFER,e.Normal_Index_Buffer),y.bufferData(y.ELEMENT_ARRAY_BUFFER,e.nIndices,y.STATIC_DRAW),y.vertexAttribPointer(t.locNormal,3,y.FLOAT,!1,0,0),t.locNormal=y.getAttribLocation(t.program,"normal"),y.bindBuffer(y.ARRAY_BUFFER,e.normal_buffer),y.bufferData(y.ARRAY_BUFFER,e.normals,y.STATIC_DRAW),y.enableVertexAttribArray(t.locNormal),y.drawElements(y.LINES,e.normals.length/3|0,y.UNSIGNED_INT,0),y.bindBuffer(y.ELEMENT_ARRAY_BUFFER,null),y.bindBuffer(y.ARRAY_BUFFER,null))}},b.nullShader=await BasicShader(b,[{uniform:{type:"phong",value:0}}]),b.particleShader=await BasicShader(b,[]),b},DestroyViewport=e=>{e.remove()},DestroyShape=e=>{if("point light"===e.shapeType)e.renderer.pointLights=e.renderer.pointLights.filter(((a,r)=>r!=e.pointLightID)),e.renderer.pointLights.map(((e,a)=>e.pointLightID=a))},LoadOBJ=async(e,a,r,t,o,n,i,l,c=!0,s=!0)=>{var f,h={vertices:[],normals:[],uvs:[]};if(s&&(cacheItem=cache.objFiles.filter((a=>a.url==e))).length)h=cacheItem[0].ret;else{var p=new Float32Array,m=new Float32Array,u=new Float32Array,d=new Float32Array;await fetch(e).then((e=>e.text())).then((e=>{e.split("\n").forEach((e=>{var a=e.split(" ");switch(a[0]){case"v":a.shift(),p=[...p,a.map((e=>+e))];break;case"vt":a.shift(),u=[...u,a.map((e=>+e))];break;case"vn":a.shift(),m=[...m,a.map((e=>+e))];break;case"f":a.shift(),d=[...d,a.map((e=>e))]}})),d.map((e=>{var a,r,t,o=new Float32Array,n=new Float32Array,i=new Float32Array;e.map((e=>{var l=e.split("/");switch(l.length){case 1:a=l[0],o=[...o,p[a-1]];break;case 2:a=l[0],r=l[1],o=[...o,p[a-1]],n=[...n,u[r-1]];break;case 3:a=l[0],r=l[1],t=l[2],o=[...o,p[a-1]],n=[...n,u[r-1]],i=[...i,m[t-1]]}}));var l=o[0][0],c=o[0][1],s=o[0][2],d=o[1][0],g=o[1][1],y=o[1][2],v=o[2][0],R=o[2][1],A=o[2][2],b=i[0][0],E=i[0][1],_=i[0][2],x=i[1][0],F=i[1][1],T=i[1][2],M=i[2][0],P=i[2][1],I=i[2][2];if(4==o.length)var w=o[3][0],S=o[3][1],C=o[3][2],L=i[3][0],B=i[3][1],U=i[3][2];switch(o.length){case 3:f=new Float32Array,i.map(((e,a)=>{f=[...f,[l,c,s,l+b,c+E,s+_],[d,g,y,d+x,g+F,y+T],[v,R,A,v+M,R+P,A+I]]})),i=f,h.vertices=[...h.vertices,...o[0],...o[1],...o[2]],n.length&&void 0!==n[0]&&(h.uvs=[...h.uvs,...n[0],...n[1],...n[2]]),i.length&&void 0!==i[0]&&(h.normals=[...h.normals,...i[0],...i[1],...i[2]]);break;case 4:f=new Float32Array,i.map(((e,a)=>{f=[...f,[l,c,s,l+b,c+E,s+_],[d,g,y,d+x,g+F,y+T],[v,R,A,v+M,R+P,A+I],[w,S,C,w+L,S+B,C+U]]})),i=f,h.vertices=[...h.vertices,...o[0],...o[1],...o[2],...o[2],...o[3],...o[0]],n.length&&(h.uvs=[...h.uvs,...n[0],...n[1],...n[2],...n[2],...n[3],...n[0]]),i.length&&(h.normals=[...h.normals,...i[0],...i[1],...i[2],...i[2],...i[3],...i[0]])}}))})),cache.objFiles=[...cache.objFiles,{url:e,ret:h}]}for(var g=0;g<h.uvs.length;g+=2)h.uvs[g+1]=1-h.uvs[g+1];for(g=0;g<h.normals.length;g+=3)h.normals[g+1]=-h.normals[g+1];for(g=0;g<h.vertices.length;g+=3){var y=[h.vertices[g+0],h.vertices[g+1],h.vertices[g+2]];i&&(y=R(...y,{roll:0,pitch:i,yaw:0})),l&&(y=R(...y,{roll:0,pitch:0,yaw:l})),n&&(y=R(...y,{roll:n,pitch:0,yaw:0})),h.vertices[g+0]=y[0],h.vertices[g+1]=y[1],h.vertices[g+2]=y[2];for(var v=2;v--;){var A=v?2*g:2*g+3;y=[h.normals[A+0],h.normals[A+1],h.normals[A+2]];i&&(y=R(...y,{roll:0,pitch:i,yaw:0})),l&&(y=R(...y,{roll:0,pitch:0,yaw:l})),n&&(y=R(...y,{roll:n,pitch:0,yaw:0})),h.normals[A+0]=y[0],h.normals[A+1]=y[1],h.normals[A+2]=y[2]}}return h},Q=(e,a,r,t,o=700)=>[t.width/2+e/r*o,t.height/2+a/r*o],R=(e,a,r,t,o=!1)=>{var n,i,l=Math,c=l.hypot,s=l.atan2,f=t.roll,h=t.pitch,p=t.yaw;(e=S(n=s(e,a)+f)*(i=c(e,a)),a=C(n)*i,e=S(n=s(e,r)+p)*(i=c(e,r)),r=C(n)*i,a=S(n=s(a,r)+h)*(i=c(a,r)),r=C(n)*i,o)&&(e+=t.x,a+=t.y,r+=t.z);return[e,a,r]},LoadGeometry=async(e,a)=>{var r,t,o,n,i,l,c,s,f,h,p,m,u,d,g,y,v,A,b;const E=e.gl;var _,x=!1,F=0,T=0,M=0,P=0,I=0,w=0,S=1,C=1,L=1,B=16,U=40,N="",k="",O=1,D=!1,z=0,V=0,G=3355443,Y=.1,H=!1,X=!1,W=!1,K=!1,q="",j=!0,$=0,Q=0,Z=0,J=!1,ee=0,ae=1,re=!0,te=!1,oe=!1,ne=1,ie=1,le=new Float32Array,ce=new Float32Array,se={};a=structuredClone(a),Object.keys(a).forEach(((e,r)=>{if("showsource"===e.toLowerCase())te=!!a[e]})),Object.keys(a).forEach(((e,c)=>{switch(e.toLowerCase()){case"x":F=a[e];break;case"y":T=a[e];break;case"z":M=a[e];break;case"roll":P=a[e];break;case"pitch":I=a[e];break;case"yaw":w=a[e];break;case"shapetype":switch(g=a[e].toLowerCase()){case"sprite":q=`${moduleBase}/resources/sprite.png`;break;case"point light":q=te?`${moduleBase}/resources/stars/star.png`:""}break;case"size":O=a[e];break;case"subs":z=a[e];break;case"equirectangular":H=!!a[e];break;case"flipnormals":W=!!a[e];break;case"shownormals":K=!!a[e];break;case"sphereize":V=a[e];break;case"objx":r=a[e];break;case"objy":t=a[e];break;case"objz":o=a[e];break;case"objroll":n=a[e];break;case"objpitch":i=a[e];break;case"objyaw":l=a[e];break;case"scalex":S=a[e];break;case"scaley":C=a[e];break;case"scalez":L=a[e];break;case"wireframe":J=!!a[e];break;case"name":k=a[e];break;case"color":G=a[e];break;case"colormix":Y=a[e];break;case"exportshape":x=!!a[e];break;case"penumbra":ee=a[e];break;case"url":N=a[e];break;case"map":q=a[e];break;case"rows":B=a[e];break;case"disabledepthtest":oe=a[e];break;case"cols":U=a[e];break;case"involvecache":re=!!a[e];break;case"muted":j=!!a[e];break;case"lum":ne=a[e];break;case"alpha":ie=a[e];break;case"geometrydata":le=a[e];break;case"precomputenormalassocs":X=a[e];break;case"texcoords":ce=a[e];break;case"issprite":$=a[e]?1:0;break;case"islight":Q=a[e]?1:0;break;case"issprite":Z=a[e]?1:0;break;case"playbackspeed":ae=a[e];break;case"averagenormals":D=!!a[e];break;default:se[e]=a[e]}})),V&&(D=!0);var fe,he,pe=new Float32Array,me=new Float32Array,ue=new Float32Array,de=new Float32Array,ge=!1;if(-1!=g.indexOf("custom shape"))fe=N,he=`${g} ${k} (${N})`;else if(he=`${g}_${z}`,z<5&&he)switch(he){case"tetrahedron_0":case"tetrahedron_1":case"tetrahedron_2":case"tetrahedron_3":case"tetrahedron_4":case"cube_0":case"cube_1":case"cube_2":case"cube_3":case"cube_4":case"octahedron_0":case"octahedron_1":case"octahedron_2":case"octahedron_3":case"octahedron_4":case"dodecahedron_0":case"dodecahedron_1":case"dodecahedron_2":case"dodecahedron_3":case"dodecahedron_4":case"icosahedron_0":case"icosahedron_1":case"icosahedron_2":case"icosahedron_3":case"icosahedron_4":case"cylinder_0":case"torus_0":case"torus knot_0":("cylinder_0"!=he||"torus_0"!=he||"cylinder_0"==he&&16==B&&40==U||"torus_0"==he&&16==B&&40==U||"torus knot_0"==he&&16==B&&40==U)&&(ge=!0,fe=`${N=`${moduleBase}/new%20shapes/`}${he}.json`)}if(ge)await fetch(fe).then((e=>e.json())).then((e=>{pe=e.vertices,me=e.normals,ue=e.normalVecs,de=e.uvs,ge=!0}));else if("custom shape"===g){if(re&&(cacheItem=cache.customShapes.filter((e=>e.url==N))).length){var ye=cacheItem[0].data;pe=ye.vertices,me=ye.normals,ue=ye.normalVecs,de=ye.uvs,console.log("found custom shape found in cache. using it"),ge=!0}ge||await fetch(fe).then((e=>e.json())).then((e=>{pe=e.vertices,me=e.normals,ue=e.normalVecs,de=e.uvs,ge=!0,cache.customShapes.push({data:e,url:N})}))}if(ge)switch(g){case"tetrahedron":case"octahedron":case"dodecahedron":case"icosahedron":H=!0}else{switch(g){case"tetrahedron":H=!0,(_=await Tetrahedron(O,z,V,W,g)).geometry.map((e=>{pe=[...pe,...e.position],me=[...me,...e.normal],de=[...de,...e.texCoord]}));break;case"octahedron":H=!0,(_=await Octahedron(O,z,V,W,g)).geometry.map((e=>{pe=[...pe,...e.position],me=[...me,...e.normal],de=[...de,...e.texCoord]}));break;case"icosahedron":H=!0,(_=await Icosahedron(O,z,V,W,g)).geometry.map((e=>{pe=[...pe,...e.position],me=[...me,...e.normal],de=[...de,...e.texCoord]}));break;case"torus":(_=await Torus(O,z,V,W,g,B,U)).geometry.map((e=>{pe=[...pe,...e.position],me=[...me,...e.normal],de=[...de,...e.texCoord]}));break;case"torus knot":(_=await TorusKnot(O,z,V,W,g,B,U)).geometry.map((e=>{pe=[...pe,...e.position],me=[...me,...e.normal],de=[...de,...e.texCoord]}));break;case"cylinder":(_=await Cylinder(O,z,V,W,g,B,U)).geometry.map((e=>{pe=[...pe,...e.position],me=[...me,...e.normal],de=[...de,...e.texCoord]}));break;case"dynamic":(_=await GeometryFromRaw(le,ce,O,z,V,W,!!le.filter((e=>4==e.length)).length,g)).geometry.map((e=>{pe=[...pe,...e.position],me=[...me,...e.normal],void 0!==e.texCoord&&e.texCoord.length&&(de=[...de,...e.texCoord])}));break;case"cube":(_=await Cube(O,z,V,W,g)).geometry.map((e=>{pe=[...pe,...e.position],me=[...me,...e.normal],de=[...de,...e.texCoord]}));break;case"rectangle":(_=await Rectangle(O,z,V,W,g)).geometry.map((e=>{pe=[...pe,...e.position],me=[...me,...e.normal],de=[...de,...e.texCoord]}));break;case"sprite":$=!0,(_=await Rectangle(O,z,V,W,g)).geometry.map((e=>{pe=[...pe,...e.position],me=[...me,...e.normal],de=[...de,...e.texCoord]}));break;case"particles":Z=1,le.map((e=>{pe=[...pe,...e]}));break;case"point light":Q=!0,(_=te?await Rectangle(Math.max(O,.5),z-1,V,W,g):{geometry:[]}).geometry.map((e=>{pe=[...pe,...e.position],me=[...me,...e.normal],de=[...de,...e.texCoord]}));break;case"obj":void 0===r&&(r=0),void 0===t&&(t=0),void 0===o&&(o=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===l&&(l=0),_=await LoadOBJ(N,0,0,0,0,n,i,l,!1),pe=_.vertices,me=_.normals,de=_.uvs;break;case"dodecahedron":H=!0,(_=await Dodecahedron(O,z,V,W,g)).geometry.map((e=>{pe=[...pe,...e.position],me=[...me,...e.normal],de=[...de,...e.texCoord]}))}for(var ve=0;ve<pe.length;ve+=3)pe[ve+0]*=S,pe[ve+1]*=C,pe[ve+2]*=L;if("obj"!=g&&"customShape"!=g)for(ve=0;ve<me.length;ve+=6){var Re=me[ve+3]-me[ve+0],Ae=me[ve+4]-me[ve+1],be=me[ve+5]-me[ve+2];me[ve+0]*=S,me[ve+1]*=C,me[ve+2]*=L,me[ve+3]=me[ve+0]+Re,me[ve+4]=me[ve+1]+Ae,me[ve+5]=me[ve+2]+be}}if("particles"!=g&&("custom shape"!=g&&"obj"!=g||V||S||C||L)){var Ee=V,_e=1-V;for(ve=0;ve<pe.length;ve+=3){var xe,Fe=pe[ve+0],Te=pe[ve+1],Me=pe[ve+2];Fe/=xe=Math.hypot(Fe,Te,Me)+1e-4,Te/=xe,Me/=xe,Fe*=Ee+xe*_e,Te*=Ee+xe*_e,Me*=Ee+xe*_e,pe[ve+0]=Fe*O*S,pe[ve+1]=Te*O*C,pe[ve+2]=Me*O*L;var Pe=me[2*ve+0],Ie=me[2*ve+1],we=me[2*ve+2];me[2*ve+0]+=pe[ve+0]-Pe,me[2*ve+1]+=pe[ve+1]-Ie,me[2*ve+2]+=pe[ve+2]-we,me[2*ve+3]+=pe[ve+0]-Pe,me[2*ve+4]+=pe[ve+1]-Ie,me[2*ve+5]+=pe[ve+2]-we,me[2*ve+0]*=S,me[2*ve+1]*=C,me[2*ve+2]*=L,me[2*ve+3]*=S,me[2*ve+4]*=C,me[2*ve+5]*=L}}if(r||t||o||n||i||l){var Se;void 0===r&&(r=0),void 0===t&&(t=0),void 0===o&&(o=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===l&&(l=0);for(ve=0;ve<me.length;ve+=6)F=me[ve+0],Te=me[ve+1],Me=me[ve+2],Se=R(Fe,Te,Me,{roll:n,pitch:i,yaw:l},!1),me[ve+0]=Se[0]+r,me[ve+1]=Se[1]+t,me[ve+2]=Se[2]+o,F=me[ve+3],Te=me[ve+4],Me=me[ve+5],Se=R(Fe,Te,Me,{roll:n,pitch:i,yaw:l},!1),me[ve+3]=Se[0]+r,me[ve+4]=Se[1]+t,me[ve+5]=Se[2]+o;for(ve=0;ve<pe.length;ve+=3)F=pe[ve+0],Te=pe[ve+1],Me=pe[ve+2],Se=R(Fe,Te,Me,{roll:n,pitch:i,yaw:l},!1),pe[ve+0]=Se[0]+r,pe[ve+1]=Se[1]+t,pe[ve+2]=Se[2]+o}if(D&&AverageNormals(pe,me,g),"dynamic"==g||X){se.normalAssocs=new Float32Array;for(ve=0;ve<pe.length;ve+=3){for(var Ce=pe[ve+0],Le=pe[ve+1],Be=pe[ve+2],Ue=new Float32Array,Ne=0;Ne<pe.length;Ne+=3){var ke=pe[Ne+0],Oe=pe[Ne+1],De=pe[Ne+2];Math.hypot(Ce-ke,Le-Oe,Be-De)<.001&&(Ue=[...Ue,Ne])}se.normalAssocs=[...se.normalAssocs,Ue]}}if(!ge||D||x){ue=new Float32Array;for(ve=0;ve<me.length;ve+=6){let e=me[ve+3]-me[ve+0],a=me[ve+4]-me[ve+1],r=me[ve+5]-me[ve+2];ue=[...ue,e,a,r]}}if(W&&!x){for(ve=0;ve<me.length;ve+=6)me[ve+3]=me[ve+0]-(me[ve+3]-me[ve+0]),me[ve+4]=me[ve+1]-(me[ve+4]-me[ve+1]),me[ve+5]=me[ve+2]-(me[ve+5]-me[ve+2]);for(ve=0;ve<ue.length;ve+=3)ue[ve+0]*=-1,ue[ve+1]*=-1,ue[ve+2]*=-1}if(x&&"background"!==k){var ze=document.createElement("div");ze.style.position="fixed",ze.style.zIndex=1e5,ze.style.left="50%",ze.style.top="50%",ze.style.transform="translate(-50%, -50%)",ze.style.background="#0008",ze.style.padding="20px",ze.style.width="600px",ze.style.height="350px",ze.style.border="1px solid #fff4",ze.style.borderRadius="5px",ze.style.fontFamily="monospace",ze.style.fontSize="20px",ze.style.color="#fff";var Ve=document.createElement("div");Ve.style.fontSize="24px",Ve.style.color="#0f8c",Ve.innerHTML=`Export Coordinates File -> ${g} `+(a?.name?`(${a.name})`:"")+"<br><br>",ze.appendChild(Ve);var Ge=document.createElement("div");Ge.style.minWidth="100%",Ge.style.height="250px",Ge.style.background="#333",Ge.style.border="1px solid #fff4",Ge.style.overflowY="auto",Ge.style.wordWrap="break-word",Ge.style.color="#888",Ge.style.fontSize="10px",ze.appendChild(Ge);var Ye=document.createElement("button");Ye.style.border="none",Ye.style.padding="3px",Ye.style.cursor="pointer",Ye.fontSize="20px",Ye.style.borderRadius="10px",Ye.style.margin="10px",Ye.style.minWidth="100px",Ye.innerHTML="📋 copy",Ye.title="copy shape data to clipboard",Ye.onclick=()=>{var e=document.createRange();e.selectNode(Ge),window.getSelection().removeAllRanges(),window.getSelection().addRange(e),document.execCommand("copy"),window.getSelection().removeAllRanges(),Ye.innerHTML="COPIED!",setTimeout((()=>{Ye.innerHTML="📋 copy"}),1e3)},ze.appendChild(Ye);var He=document.createElement("button");He.onclick=()=>ze.remove(),He.style.border="none",He.style.padding="3px",He.style.cursor="pointer",He.fontSize="20px",He.style.borderRadius="10px",He.style.margin="10px",He.style.background="#faa",He.style.minWidth="100px",He.innerHTML="close",ze.appendChild(He);var Xe={vertices:[],normals:[],normalVecs:[],uvs:[]};pe.map((e=>Xe.vertices.push(Math.round(1e3*e)/1e3)));for(ve=0;ve<me.length;ve+=6){Ce=me[ve+0],Le=me[ve+1],Be=me[ve+2],ke=W?me[ve+0]-(me[ve+3]-me[ve+0]):me[ve+3],Oe=W?me[ve+1]-(me[ve+4]-me[ve+1]):me[ve+4],De=W?me[ve+2]-(me[ve+5]-me[ve+2]):me[ve+5];Ce=Math.round(1e3*Ce)/1e3,Le=Math.round(1e3*Le)/1e3,Be=Math.round(1e3*Be)/1e3,ke=Math.round(1e3*ke)/1e3,Oe=Math.round(1e3*Oe)/1e3,De=Math.round(1e3*De)/1e3,Xe.normals.push(Ce,Le,Be,ke,Oe,De)}for(ve=0;ve<ue.length;ve++)Xe.normalVecs.push((W?-1:1)*Math.round(1e3*ue[ve])/1e3);de.map((e=>Xe.uvs.push(Math.round(1e3*e)/1e3))),Ge.innerHTML=JSON.stringify(Xe),document.body.appendChild(ze)}pe=new Float32Array(pe),me=new Float32Array(me),ue=new Float32Array(ue),de=new Float32Array(de),c=E.createBuffer(),E.bindBuffer(E.ARRAY_BUFFER,c),E.bufferData(E.ARRAY_BUFFER,pe,E.STATIC_DRAW),E.bindBuffer(E.ARRAY_BUFFER,null),y=new Uint32Array(Array(pe.length/3).fill().map(((e,a)=>a))),s=E.createBuffer(),E.bindBuffer(E.ELEMENT_ARRAY_BUFFER,s),E.bufferData(E.ELEMENT_ARRAY_BUFFER,y,E.STATIC_DRAW),E.bindBuffer(E.ELEMENT_ARRAY_BUFFER,null),p=E.createBuffer(),E.bindBuffer(E.ARRAY_BUFFER,p),E.bufferData(E.ARRAY_BUFFER,ue,E.STATIC_DRAW),E.bindBuffer(E.ARRAY_BUFFER,null),A=new Uint32Array(Array(ue.length/3).fill().map(((e,a)=>a))),m=E.createBuffer(),E.bindBuffer(E.ELEMENT_ARRAY_BUFFER,m),E.bufferData(E.ELEMENT_ARRAY_BUFFER,A,E.STATIC_DRAW),E.bindBuffer(E.ELEMENT_ARRAY_BUFFER,null),f=E.createBuffer(),E.bindBuffer(E.ARRAY_BUFFER,f),E.bufferData(E.ARRAY_BUFFER,me,E.STATIC_DRAW),E.bindBuffer(E.ARRAY_BUFFER,null),v=new Uint32Array(Array(me.length/3).fill().map(((e,a)=>a))),h=E.createBuffer(),E.bindBuffer(E.ELEMENT_ARRAY_BUFFER,h),E.bufferData(E.ELEMENT_ARRAY_BUFFER,v,E.STATIC_DRAW),E.bindBuffer(E.ELEMENT_ARRAY_BUFFER,null),u=E.createBuffer(),E.bindBuffer(E.ARRAY_BUFFER,u),E.bufferData(E.ARRAY_BUFFER,de,E.STATIC_DRAW),E.bindBuffer(E.ARRAY_BUFFER,null),b=new Uint32Array(Array(de.length/2).fill().map(((e,a)=>a))),d=E.createBuffer(),E.bindBuffer(E.ELEMENT_ARRAY_BUFFER,d),E.bufferData(E.ELEMENT_ARRAY_BUFFER,b,E.STATIC_DRAW),E.bindBuffer(E.ELEMENT_ARRAY_BUFFER,null);var We={x:F,y:T,z:M,roll:P,pitch:I,yaw:w,color:G,colorMix:Y,size:O,subs:z,name:k,url:N,averageNormals:D,showNormals:K,shapeType:g,exportShape:x,sphereize:V,equirectangular:H,flipNormals:W,vertices:pe,normals:me,normalVecs:ue,uvs:de,vertex_buffer:c,Vertex_Index_Buffer:s,normal_buffer:f,Normal_Index_Buffer:h,muted:j,normalVec_buffer:p,NormalVec_Index_Buffer:m,nVecIndices:A,uv_buffer:u,UV_Index_Buffer:d,vIndices:y,nIndices:v,uvIndices:b,map:q,video:undefined,textureMode:"image",isSprite:$,isLight:Q,playbackSpeed:ae,disableDepthTest:oe,lum:ne,alpha:ie,involveCache:re,renderer:e,isParticle:Z,penumbra:ee,wireframe:J};return Object.keys(We).forEach(((e,a)=>{se[e]=We[e]})),"particles"==g?await e.particleShader.ConnectGeometry(se):("point light"!=g&&"sprite"!=g||(void 0===a.color&&(se.color=11184810),"point light"==g&&(se.pointLightID=e.pointLights.length,e.pointLights.push(se))),await e.nullShader.ConnectGeometry(se)),se},GenericPopup=async(e="",a=!1,r=(()=>{}),t=400,o=300)=>{var n=document.createElement("div");n.style.position="fixed",n.style.zIndex=1e5,n.style.left="50%",n.style.top="50%",n.style.transform="translate(-50%, -50%)",n.style.background="#0008",n.style.padding="20px",n.style.width=`${t}px`,n.style.height=`${o}px`,n.style.border="1px solid #fff4",n.style.borderRadius="5px",n.style.fontFamily="monospace",n.style.fontSize="20px",n.style.color="#fff";var i=document.createElement("div");if(i.style.fontSize="24px",i.style.color="#0f8c",i.innerHTML=e,n.appendChild(i),a){var l=document.createElement("button");l.onclick=()=>{r(),n.remove()},l.style.border="none",l.style.padding="3px",l.style.cursor="pointer",l.fontSize="20px",l.style.borderRadius="10px",l.style.margin="10px",l.style.background="#faa",l.style.minWidth="100px",l.innerHTML="SURE!",n.appendChild(l)}var c=document.createElement("button");c.onclick=()=>n.remove(),c.style.border="none",c.style.padding="3px",c.style.cursor="pointer",c.fontSize="20px",c.style.borderRadius="10px",c.style.margin="10px",c.style.background="#faa",c.style.minWidth="100px",c.innerHTML="close",n.appendChild(c),document.body.appendChild(n)},ImageToPo2=e=>{let a=e;if(!IsPowerOf2(e.width)||!IsPowerOf2(e.height)){let r,t,o=document.createElement("canvas"),n=o.getContext("2d"),i=8,l=0,c=6e6,s=Math.hypot(e.width,e.height);for(let e=0;e<16;e++)(r=Math.abs(l-s))<c&&(c=r,l=i*2**e,t=e);l-=i*2**(t-1),o.width=l,o.height=l,n.drawImage(e,0,0,o.width,o.height),a=new Image,a=o}return a},VideoToImage=e=>{if(void 0!==e){let a,r;if(scratchCanvas.width!=e.videoWidth||scratchCanvas.height!=e.videoHeight?(a=e.videoWidth,r=e.videoHeight):(a=scratchCanvas.width,r=scratchCanvas.height),!IsPowerOf2(a)||!IsPowerOf2(r)){let e,t,o=8,n=0,i=6e6,l=Math.hypot(a,r);for(let a=0;a<12;a++)(e=Math.abs(n-l))<i&&(i=e,n=o*2**a,t=a);n-=o*2**(t-1),n=Math.min(512,n),a=n/1,r=n/1}return scratchCanvas.width=a,scratchCanvas.height=r,sctx.drawImage(e,0,0,scratchCanvas.width,scratchCanvas.height),scratchCanvas}return scratchCanvas.width=1,scratchCanvas.height=1,scratchCanvas},BindImage=(e,a,r,t="image",o=-1,n="",i=!0)=>{let l;switch(t){case"video":i&&(cacheItem=cache.texImages.filter((e=>e.url==n&&-1!=o&&e.tVal==o))).length?(console.log("found video texture in cache... using it"),l=cacheItem[0].texImage):(l=VideoToImage(a),-1==o&&cache.texImages.push({url:n,tval:o,texImage:l}));break;case"image":i&&(cacheItem=cache.texImages.filter((e=>e.url==n))).length?(console.log("found image texture in cache... using it"),l=cacheItem[0].texImage):(l=ImageToPo2(a),-1==o&&cache.texImages.push({url:n,tval:o,texImage:l}))}e.bindTexture(e.TEXTURE_2D,r),l.width&&l.height&&e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,l),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.REPEAT),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.REPEAT),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR)},SyncNormals=(e,a=!1)=>{for(var r,t,o,n,i=e.vertices,l=new Float32Array,c=new Float32Array,s=0;s<i.length;s+=3)if(r=i[s+0],t=i[s+1],o=i[s+2],c=[...c,[r,t,o]],s%9==6){var f=Normal(c);l=[...l,f,f,f],c=new Float32Array}if(a){var h=new Float32Array;for(s=0;s<i.length;s+=3){var p=i[s+0],m=i[s+1],u=i[s+2],d=s/3|0,g=(l[d][3],l[d][0],l[d][4],l[d][1],l[d][5],l[d][2],0);n=[0,0,0],e.normalAssocs[d].map((e=>{var a=e/3|0;n[0]+=l[a][3]-l[a][0],n[1]+=l[a][4]-l[a][1],n[2]+=l[a][5]-l[a][2],g++})),n[0]/=g,n[1]/=g,n[2]/=g,h=[...h,...n],e.normals[2*s+0]=p,e.normals[2*s+1]=m,e.normals[2*s+2]=u,e.normals[2*s+3]=p+n[0],e.normals[2*s+4]=m+n[1],e.normals[2*s+5]=u+n[2]}for(f=e.normalVecs,s=0;s<f.length;s++)f[s]=h[s]}},AverageNormals=(e,a,r)=>{a.length=0;for(var t,o=IsPolyhedron(r),n=0;n<e.length;n+=3)n%9||(t=Normal([[e[n+0],e[n+1],e[n+2]],[e[n+3],e[n+4],e[n+5]],[e[n+6],e[n+7],e[n+8]]],o)),a[2*n+0]=e[n+0],a[2*n+1]=e[n+1],a[2*n+2]=e[n+2],a[2*n+3]=e[n+0]+(t[0]-t[3]),a[2*n+4]=e[n+1]+(t[1]-t[4]),a[2*n+5]=e[n+2]+(t[2]-t[5]);new Float32Array;var i,l,c,s,f,h,p,m,u,d,g,y,v,R=structuredClone(a);for(n=0;n<a.length;n+=6){f=a[n+0],h=a[n+1],p=a[n+2],l=a[n+3],c=a[n+4],s=a[n+5],i=1;for(var A=0;A<a.length;A+=6)A!=n&&(m=a[A+0],u=a[A+1],d=a[A+2],g=a[A+3],y=a[A+4],v=a[A+5],Math.hypot(f-m,h-u,p-d)<.01&&(l+=g,c+=y,s+=v,i++));R[n+3]=l/=i,R[n+4]=c/=i,R[n+5]=s/=i}R.map(((e,r)=>a[r]=e))},BasicShader=async(e,a=[])=>{const r=e.gl;var t={iURL:null,locT:null,locUv:null,locFov:null,program:null,optionalUniforms:[],optionalLighting:[]};a.map((a=>{Object.keys(a).forEach(((r,o)=>{switch(r.toLowerCase()){case"lighting":if("ambientlight"===a[r].type.toLowerCase())if(void 0===a[r]?.enabled||a[r].enabled){var n={name:a[r].type,value:void 0===a[r].value?e.ambientLight:a[r].value};t.optionalLighting.push(n)}break;case"uniform":switch(a[r].type.toLowerCase()){case"reflection":if(void 0===a[r]?.enabled||a[r].enabled){var i={name:a[r].type,playbackSpeed:void 0===a[r].playbackSpeed?1:a[r].playbackSpeed,involveCache:void 0===a[r].involveCache||a[r].involveCache,muted:void 0===a[r].muted||a[r].muted,map:a[r].map,loc:"locReflection",value:void 0===a[r].value?.5:a[r].value,flatShading:void 0!==a[r].flatShading&&a[r].flatShading,flipReflections:void 0!==a[r].flipReflections&&a[r].flipReflections,flatShadingUniform:"refFlatShading",dataType:"uniform1f",vertDeclaration:"\n                    varying vec3 reflectionPos;\n                  ",vertCode:"\n                    reflectionPos = R(nVeci, geoOri);\n                  ",fragDeclaration:"\n                    uniform float reflection;\n                    uniform float refFlatShading;\n                    uniform float refOmitEquirectangular;\n                    uniform float refFlipRefs;\n                    uniform sampler2D reflectionMap;\n                    varying vec3 reflectionPos;\n                  ",fragCode:"\n                    //light.rgb *= .5;\n                    //light.rgb += .05;\n                    float refP1, refP2;\n                    if(refOmitEquirectangular != 1.0){\n                      float px = reflectionPos.x;\n                      float py = reflectionPos.y;\n                      float pz = reflectionPos.z;\n                      refP1 = -atan(px, pz)/ M_PI / 2.0;\n                      refP2 = acos( py / (.001 + sqrt(px * px + py * py + pz * pz))) / M_PI;\n                      if(refFlipRefs != 0.0) refP2 = 1.0 - refP2;\n                    } else {\n                      refP1 = vUv.x;\n                      refP2 = vUv.y;\n                    }\n                    \n                    vec2 refCoords = vec2(1.0 - refP1, refP2);\n                    vec4 refCol = vec4(texture2D(reflectionMap, vec2(refCoords.x, refCoords.y)).rgb * 1.25, reflection / 1.0);\n                    mixColor = merge(mixColor, refCol);\n                    baseColorIp = 1.0 - reflection;\n                    //light += reflection / 4.0;\n                  "};t.optionalUniforms.push(i)}break;case"phong":if(void 0===a[r]?.enabled||a[r].enabled){i={name:a[r].type,loc:"locPhong",value:void 0===a[r].value?.3:a[r].value,flatShading:void 0!==a[r].flatShading&&a[r].flatShading,flatShadingUniform:"phongFlatShading",theta:void 0===a[r].theta?Math.PI+.5:a[r].theta,dataType:"uniform1f",vertDeclaration:"\n                    varying vec3 phongPos;\n                  ",vertCode:"\n                    phongPos = nVec; //R(nVeci, geoOri);\n                    hasPhong = 1.0;\n                  ",fragDeclaration:"\n                    uniform float phong;\n                    uniform float phongTheta;\n                    uniform float phongFlatShading;\n                    varying vec3 phongPos;\n                  ",fragCode:"\n                    if(isLight == 0.0 && isSprite == 0.0 && isParticle == 0.0){\n                      //light.rgb *= .5;\n                      float phongP1, phongP2;\n                      float px, py, pz;\n                      if(phongFlatShading != 0.0){\n                        px = 0.0;\n                        py = 0.0;\n                        pz = 0.0;\n                      }else{\n                        px = phongPos.x;\n                        py = phongPos.y;\n                        pz = phongPos.z;\n                      }\n                      phongP1 = atan(px, pz) + phongTheta;\n                      phongP2 = -acos( py / (.001 + sqrt(px * px + py * py + pz * pz)));\n\n                      float fact = pow(pow((1.0+cos(phongP1)) * (1.0+cos(phongP2+M_PI/2.0-.2)), 3.0), 3.0) / 5e5 * phong ;\n                      light = vec4(light.rgb + fact, 1.0) * 25.0;\n                    }\n                  "};t.optionalUniforms.push(i)}}}}))}));let o={ConnectGeometry:null,datasets:[]};r.enable(r.DEPTH_TEST),r.cullFace(r.BACK),e.alpha&&(r.blendFunc(r.SRC_ALPHA,r.ONE),r.enable(r.BLEND),r.disable(r.DEPTH_TEST));let n="";t.optionalUniforms.map((e=>{n+="\n"+e.vertDeclaration+"\n"}));let i="";t.optionalUniforms.map((e=>{i+="\n"+e.vertCode+"\n"}));let l="";t.optionalUniforms.map((e=>{l+="\n"+e.fragDeclaration+"\n"}));let c="";t.optionalUniforms.map((e=>{c+="\n"+e.fragCode+"\n"})),o.vert=`\n    precision highp float;\n    #define M_PI 3.14159265358979323\n    attribute vec2 uv;\n    ${n}\n    \n    uniform float t;\n    uniform vec3 color;\n    uniform float ambientLight;\n    uniform vec3 camPos;\n    uniform vec3 camOri;\n    uniform vec3 geoPos;\n    uniform vec3 geoOri;\n    uniform float pointSize;\n    uniform float isSprite;\n    uniform float isLight;\n    uniform float isParticle;\n    uniform float penumbraPass;\n    //uniform vec4 pointLightPos[16];\n    uniform float fov;\n    uniform float equirectangular;\n    uniform float renderNormals;\n    uniform vec2 resolution;\n    attribute vec3 position;\n    attribute vec3 normal;\n    attribute vec3 normalVec;\n    varying vec2 vUv;\n    varying vec2 uvi;\n    varying vec3 nVec;\n    varying vec3 nVeci;\n    varying vec3 fPos;\n    varying vec3 fPosi;\n    varying vec3 vnorm;\n    varying float skip;\n    varying float hasPhong;\n    \n    \n    vec3 R(vec3 pos, vec3 rot){\n      float p, d;\n      pos.x = sin(p=atan(pos.x,pos.z)+rot.z)*(d=sqrt(pos.x*pos.x+pos.z*pos.z));\n      pos.z = cos(p)*d;\n      pos.y = sin(p=atan(pos.y,pos.z)+rot.y)*(d=sqrt(pos.y*pos.y+pos.z*pos.z));\n      pos.z = cos(p)*d;\n      pos.x = sin(p=atan(pos.x,pos.y)+rot.x)*(d=sqrt(pos.x*pos.x+pos.y*pos.y));\n      pos.y = cos(p)*d;\n      return pos;\n    }\n    \n    void main(){\n      \n      hasPhong = 0.0;\n      \n      float cx, cy, cz;\n      if(renderNormals == 1.0){\n        cx = normal.x;\n        cy = normal.y;\n        cz = normal.z;\n      }else{\n        cx = position.x;\n        cy = position.y;\n        cz = position.z;\n      }\n      \n      \n      uvi = uv / 2.0;\n      uvi = vec2(uvi.x, .5 - uvi.y);\n      \n      nVeci = normalVec;\n      \n      fPosi = position;\n      vnorm = normal;\n      \n      \n      // camera rotation\n      \n      vec3 geo, pos;\n      \n      if(isSprite != 0.0 || isLight != 0.0){\n        \n        geo = R(geoPos, camOri);\n        pos = R(vec3(cx, cy, cz),\n                 vec3(0.0, -camOri.y + M_PI, 0.0));\n        pos = R(vec3(pos.x, pos.y, pos.z),\n                 vec3(-camOri.x, 0.0, -camOri.z ));\n        pos = R(vec3(pos.x, pos.y, pos.z), camOri);\n        nVec = vec3(normalVec.x, normalVec.y, normalVec.z);\n        nVec = R(nVec, geoOri);\n        nVec = R(nVec, vec3(0.0, camOri.y, camOri.z));\n\n      }else{\n        geo = R(geoPos, camOri);\n        pos = R(vec3(cx, cy, cz), geoOri);\n        pos = R(vec3(pos.x, pos.y, pos.z), camOri);\n        nVec = vec3(normalVec.x, normalVec.y, normalVec.z);\n        nVec = R(nVec, geoOri);\n        nVec = R(nVec, vec3(0.0, camOri.y, camOri.z));\n      }\n      fPos = vec3(pos.x, pos.y, pos.z);\n      \n      ${i}\n      \n      float camz = camPos.z / 1e3 * pow(5.0, (log(fov) / 1.609438));\n      \n      float Z = pos.z + camz + geo.z;\n      if(Z > 0.0) {\n        if(isParticle != 0.0 && penumbraPass != 0.0) Z += .001;\n        float X = ((pos.x + camPos.x + geo.x) / Z * fov / resolution.x);\n        float Y = ((pos.y + camPos.y + geo.y) / Z * fov / resolution.y);\n        \n        gl_PointSize = 100.0 * pointSize / Z;\n        gl_Position = vec4(X, Y, Z/100000.0, 1.0);\n        skip = 0.0;\n        vUv = uv;\n      }else{\n        skip = 1.0;\n      }\n    }\n  `,o.frag=`\n    precision highp float;\n    #define M_PI 3.14159265358979323\n    ${l}\n    uniform float t;\n    uniform vec2 resolution;\n    uniform float flatShading;\n    uniform float isSprite;\n    uniform float isLight;\n    uniform float isParticle;\n    uniform vec4 pointLightPos[128];\n    uniform vec4 pointLightCol[128];\n    uniform int pointLightCount;\n    uniform float ambientLight;\n    uniform float renderNormals;\n    uniform float equirectangular;\n    uniform float colorMix;\n    //uniform float penumbraPass;\n    uniform vec3 color;\n    uniform sampler2D baseTexture;\n    uniform float alpha;\n    uniform vec3 camPos;\n    uniform vec3 camOri;\n    uniform vec3 geoPos;\n    uniform vec3 geoOri;\n    varying vec2 vUv;\n    varying vec2 uvi;\n    varying vec3 vnorm;\n    varying vec3 nVec;\n    varying vec3 nVeci;\n    varying vec3 fPos;\n    varying vec3 fPosi;\n    varying float skip;\n    varying float hasPhong;\n\n    vec4 merge (vec4 col1, vec4 col2){\n      return vec4((col1.rgb * col1.a) + (col2.rgb * col2.a), 1.0);\n    }\n    \n    vec2 Coords(float flatShading) {\n      if(equirectangular == 1.0){\n        float p;\n        float p2;\n        p = flatShading == 1.0 ? atan(nVeci.x, nVeci.z): atan(fPosi.x, fPosi.z);\n        float p1;\n        p1 = p / M_PI / 2.0;\n        p2 = flatShading == 1.0 ?\n              acos(nVeci.y / (sqrt(nVeci.x*nVeci.x + nVeci.y*nVeci.y + nVec.z*nVeci.z)+.00001)) / M_PI   :\n              p2 = acos(fPosi.y / (sqrt(fPosi.x*fPosi.x + fPosi.y*fPosi.y + fPosi.z*fPosi.z)+.00001)) / M_PI;\n        return vec2(p1, p2);\n      }else{\n        return vUv;\n      }\n    }\n\n    vec3 R(vec3 pos, vec3 rot){\n      float p, d;\n      pos.x = sin(p=atan(pos.x,pos.z)+rot.z)*(d=sqrt(pos.x*pos.x+pos.z*pos.z));\n      pos.z = cos(p)*d;\n      pos.y = sin(p=atan(pos.y,pos.z)+rot.y)*(d=sqrt(pos.y*pos.y+pos.z*pos.z));\n      pos.z = cos(p)*d;\n      pos.x = sin(p=atan(pos.x,pos.y)+rot.x)*(d=sqrt(pos.x*pos.x+pos.y*pos.y));\n      pos.y = cos(p)*d;\n      return pos;\n    }\n    \n    vec4 GetPointLight(){\n      \n      float ret = 0.0;\n      vec4 rgba = vec4(0.0, 0.0, 0.0, 1.0);\n      for(int i=0; i < 16; i++){\n        if(i >= pointLightCount) break;\n        vec3 lpos = pointLightPos[i].xyz;\n        lpos.x -= geoPos.x;\n        lpos.y -= geoPos.y;\n        lpos.z -= geoPos.z;\n        lpos = R(lpos, vec3(camOri.x, 0.0, camOri.z ));\n        lpos = R(lpos, vec3(0.0, camOri.y, 0.0));\n\n        float mag = pointLightPos[i].w;\n        ret = mag / (1.0 + pow(1.0 + sqrt((lpos.x-fPos.x) * (lpos.x-fPos.x) +\n                     (lpos.y-fPos.y) * (lpos.y-fPos.y) +\n                     (lpos.z-fPos.z) * (lpos.z-fPos.z)), 2.0) / 3.0) * 40.0;\n        \n        rgba.r += ret * pointLightCol[i].r;\n        rgba.g += ret * pointLightCol[i].g;\n        rgba.b += ret * pointLightCol[i].b;\n      }\n      \n      return pointLightCount > 0 ? vec4(rgba.rgb + ambientLight, 1.0) : vec4(ambientLight, ambientLight, ambientLight, 1.0);\n    }\n\n    void main() {\n      if(isParticle != 0.0){\n        gl_FragColor = merge(gl_FragColor, vec4(color.rgb, alpha));\n      }else{\n        float mixColorIp = colorMix;\n        float baseColorIp = 1.0 - mixColorIp;\n        vec4 mixColor = vec4(color.rgb, mixColorIp);\n        vec4 light = hasPhong == 1.0 ? GetPointLight() :\n              vec4(ambientLight, ambientLight, ambientLight, 1.0);\n        float colorMag = 1.0;\n        if(skip != 1.0){\n          if(renderNormals == 1.0){\n            gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n          }else{\n            ${c}\n            vec4 texel = texture2D( baseTexture, Coords(0.0));\n            if(isSprite != 0.0 || isLight != 0.0){\n              gl_FragColor = vec4(texel.rgb * 2.0, texel.a * alpha);\n            }else{\n              texel.a = baseColorIp;\n              vec4 col = merge(mixColor, texel);\n              col.rgb *= light.rgb;\n              gl_FragColor = vec4(col.rgb * colorMag, 1.0);\n            }\n          }\n        }\n      }\n    }\n  `;const s=r.createShader(r.VERTEX_SHADER);r.shaderSource(s,o.vert),r.compileShader(s);const f=r.createShader(r.FRAGMENT_SHADER);return r.shaderSource(f,o.frag),r.compileShader(f),o.ConnectGeometry=async(a,n=!1)=>{var i=a.involveCache,l=structuredClone(t);o.datasets=[...o.datasets,l],l.program=r.createProgram(),r.attachShader(l.program,s),r.attachShader(l.program,f),r.linkProgram(l.program),a.shader=o;var c=a.map;if(a.datasetIdx=o.datasets.length-1,r.getProgramParameter(l.program,r.LINK_STATUS)){if(r.useProgram(l.program),r.bindBuffer(r.ARRAY_BUFFER,a.vertex_buffer),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,a.Vertex_Index_Buffer),l.locPosition=r.getAttribLocation(l.program,"position"),r.vertexAttribPointer(l.locPosition,3,r.FLOAT,!1,0,0),r.enableVertexAttribArray(l.locPosition),r.bindBuffer(r.ARRAY_BUFFER,a.uv_buffer),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,a.UV_Index_Buffer),l.locUv=r.getAttribLocation(l.program,"uv"),r.vertexAttribPointer(l.locUv,2,r.FLOAT,!1,0,0),r.enableVertexAttribArray(l.locUv),r.bindBuffer(r.ARRAY_BUFFER,a.normal_buffer),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,a.Normal_Index_Buffer),l.locNormal=r.getAttribLocation(l.program,"normal"),r.vertexAttribPointer(l.locNormal,3,r.FLOAT,!0,0,0),r.enableVertexAttribArray(l.locNormal),r.bindBuffer(r.ARRAY_BUFFER,a.normalVec_buffer),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,a.NormalVec_Index_Buffer),l.locNormalVec=r.getAttribLocation(l.program,"normalVec"),r.vertexAttribPointer(l.locNormalVec,3,r.FLOAT,!0,0,0),r.enableVertexAttribArray(l.locNormalVec),!n){if(a.isLight||l.optionalUniforms.map((async e=>{switch(e.name){case"reflection":var t=e.map;if(t){let a,l=(a=t.split("."))[a.length-1].toLowerCase();switch(e.refTexture=r.createTexture(),l){case"mp4":case"webm":case"avi":case"mkv":case"ogv":e.textureMode="video",i&&(cacheItem=cache.textures.filter((e=>e.url==t))).length?(console.log("found video in cache... using it"),e.video=cacheItem[0].resource,o.datasets=[...o.datasets,{texture:cacheItem[0].texture,iURL:t}]):(e.video=document.createElement("video"),e.video.muted=!0,e.video.playbackRate=e.playbackSpeed,e.video.defaultPlaybackRate=e.playbackSpeed,o.datasets=[...o.datasets,{texture:e.refTexture,iURL:t}],e.video.loop=!0,e.muted||audioConsent||(audioConsent=!0,GenericPopup("play audio OK?",!0,(()=>{cache.textures.filter((e=>e.url==t))[0].resource.muted=!1,cache.textures.filter((e=>e.url==t))[0].resource.currentTime=0,cache.textures.filter((e=>e.url==t))[0].resource.play()}))),e.video.playbackRate=e.video.defaultPlaybackRate=e.playbackSpeed,e.video.oncanplay=async()=>{e.video.play()},cache.textures.push({url:t,resource:e.video,texture:e.refTexture}),await fetch(t).then((e=>e.blob())).then((a=>{e.video.src=URL.createObjectURL(a)})));break;default:e.textureMode="image";var n=new Image;o.datasets=[...o.datasets,{texture:e.refTexture,iURL:t}],r.activeTexture(r.TEXTURE1),n.onload=()=>{BindImage(r,n,e.refTexture,e.textureMode,-1,t)},cache.textures.push({url:t,resource:n,texture:e.refTexture}),await fetch(t).then((e=>e.blob())).then((e=>{n.src=URL.createObjectURL(e)}))}}r.useProgram(l.program),e.locRefOmitEquirectangular=r.getUniformLocation(l.program,"refOmitEquirectangular"),r.uniform1f(e.locRefOmitEquirectangular,"rectangle"==a.shapeType||"point light"==a.shapeType||"sprite"==a.shapeType||"particles"==a.shapeType?1:0),e.locRefFlipRefs=r.getUniformLocation(l.program,"refFlipRefs"),r.uniform1f(e.locRefFlipRefs,e.flipReflections),e.locRefTexture=r.getUniformLocation(l.program,"reflectionMap"),r.bindTexture(r.TEXTURE_2D,e.refTexture),r.uniform1i(e.locRefTexture,1),r.activeTexture(r.TEXTURE1),r.bindTexture(r.TEXTURE_2D,e.refTexture);break;case"phong":e.locPhongTheta=r.getUniformLocation(l.program,e.theta),r.uniform1f(e.locPhongTheta,e.theta)}e.locFlatShading=r.getUniformLocation(l.program,e.flatShadingUniform),r.uniform1f(e.locFlatShading,e.flatShading?1:0),e.loc=r.getUniformLocation(l.program,e.name),r[e.dataType](e.loc,e.value)})),l.locColor=r.getUniformLocation(l.program,"color"),r.uniform3f(l.locColor,...HexToRGB(a.color)),"particles"==a.shapeType&&(l.locPointSize=r.getUniformLocation(l.program,"pointSize"),r.uniform1f(l.locPointSize,a.size)),l.locColorMix=r.getUniformLocation(l.program,"colorMix"),r.uniform1f(l.locColorMix,a.colorMix),l.locIsSprite=r.getUniformLocation(l.program,"isSprite"),r.uniform1f(l.locIsSprite,a.isSprite?1:0),l.locIsLight=r.getUniformLocation(l.program,"isLight"),r.uniform1f(l.locIsLight,a.isLight?1:0),l.locIsParticle=r.getUniformLocation(l.program,"isParticle"),r.uniform1f(l.locIsParticle,a.isParticle?1:0),l.locPenumbraPass=r.getUniformLocation(l.program,"penumbraPass"),l.locAlpha=r.getUniformLocation(l.program,"alpha"),r.uniform1f(l.locAlpha,a.alpha),l.locPointLights=r.getUniformLocation(l.program,"pointLightPos[0]"),l.locPointLightCols=r.getUniformLocation(l.program,"pointLightCol[0]"),l.locPointLightCount=r.getUniformLocation(l.program,"pointLightCount"),r.uniform1i(l.locPointLightCount,0),l.locResolution=r.getUniformLocation(l.program,"resolution"),r.uniform2f(l.locResolution,e.width,e.height),l.locEquirectangular=r.getUniformLocation(l.program,"equirectangular"),r.uniform1f(l.locEquirectangular,a.equirectangular?1:0),l.locT=r.getUniformLocation(l.program,"t"),r.uniform1f(l.locT,0),l.locAmbientLight=r.getUniformLocation(l.program,"ambientLight"),r.uniform1f(l.locAmbientLight,e.ambientLight),l.texture=r.createTexture(),r.bindTexture(r.TEXTURE_2D,l.texture),l.locTexture=r.getUniformLocation(l.program,"baseTexture"),c){let e;switch(l.iURL=c,(e=c.split("."))[e.length-1].toLowerCase()){case"mp4":case"webm":case"avi":case"mkv":case"ogv":a.textureMode="video",i&&(cacheItem=cache.textures.filter((e=>e.url==l.iURL))).length?(console.log("found video in cache... using it"),l.resource=cacheItem[0].resource,l.texture=cacheItem[0].texture):(l.resource=document.createElement("video"),l.resource.muted=!0,l.resource.addEventListener("canplay",(()=>{l.resource.playbackRate=l.resource.defaultPlaybackRate=a.playbackSpeed})),l.resource.loop=!0,a.muted||audioConsent||(audioConsent=!0,GenericPopup("play audio OK?",!0,(()=>{l.resource.muted=!1,l.resource.currentTime=0,l.resource.play()}))),l.resource.playbackRate=l.resource.defaultPlaybackRate=a.playbackSpeed,l.resource.oncanplay=async()=>{l.resource.play()},cache.textures.push({url:c,resource:l.resource,texture:l.texture}),await fetch(c).then((e=>e.blob())).then((e=>{l.resource.src=URL.createObjectURL(e)})));break;default:a.textureMode="image";var h=new Image;r.activeTexture(r.TEXTURE0),cache.textures.push({url:c,resource:h,texture:l.texture}),h.onload=()=>{BindImage(r,h,l.texture,a.textureMode,-1,c)},await fetch(c).then((e=>e.blob())).then((e=>{h.src=URL.createObjectURL(e)}))}}r.useProgram(l.program),r.uniform1i(l.locTexture,0),r.activeTexture(r.TEXTURE0),r.bindTexture(r.TEXTURE_2D,l.texture),l.locCamPos=r.getUniformLocation(l.program,"camPos"),l.locCamOri=r.getUniformLocation(l.program,"camOri"),l.locGeoPos=r.getUniformLocation(l.program,"geoPos"),l.locGeoOri=r.getUniformLocation(l.program,"geoOri"),l.locFov=r.getUniformLocation(l.program,"fov"),l.locRenderNormals=r.getUniformLocation(l.program,"renderNormals"),r.uniform3f(l.locCamPos,e.x,e.y,e.z),r.uniform3f(l.locCamOri,e.roll,e.pitch,e.yaw),r.uniform3f(l.locGeoPos,e.x,e.y,e.z),r.uniform3f(l.locGeoOri,a.roll,a.pitch,a.yaw),r.uniform1f(l.locFov,e.fov),r.uniform1f(l.locRenderNormals,0)}}else{var p=r.getProgramInfoLog(l.program),m=r.getShaderInfoLog(s),u=r.getShaderInfoLog(f);console.error(`bad shader :( ${p}`),console.error(`vShader info : ${m}`),console.error(`fShader info : ${u}`)}},o},IsPolyhedron=e=>{var a;switch(e){case"tetrahedron":case"cube":case"octahedron":case"dodecahedron":case"icosahedron":case"tetrahedron":case"dynamic":a=!0;break;default:a=!1}return a},GeometryFromRaw=async(e,a,r,t,o,n,i=!1,l="")=>{var c,s,f,h,p,m=new Float32Array,u=new Float32Array,d=e,g=[],y=`${l}_${t}`,v=IsPolyhedron(l);if("obj"===l)p=await subbed(0,1,o,d,a,y);else p=await subbed(t+(v?1:0),1,o,d,a,y);for(p.map((e=>{e.verts.map((e=>{e[0]*=r,e[1]*=r,e[2]*=r})),i?(m=[...m,e.verts[0],e.verts[1],e.verts[2],e.verts[2],e.verts[3],e.verts[0]],void 0!==e.uvs&&e.uvs.length&&(u=[...u,e.uvs[0],e.uvs[1],e.uvs[2],e.uvs[2],e.uvs[3],e.uvs[0]])):(m=[...m,...e.verts],void 0!==e.uvs&&e.uvs.length&&(u=[...u,...e.uvs]))})),s=0;s<m.length;s++){var R;f=[m[3*(c=s/3|0)+0],m[3*c+1],m[3*c+2]],s%3||(R=Normal(f,v),n||(R[3]=R[0]+(R[0]-R[3]),R[4]=R[1]+(R[1]-R[4]),R[5]=R[2]+(R[2]-R[5]))),h=n?m.length-s-1:s,g=[...g,{position:m[h],normal:[...m[h],m[h][0]+(R[3]-R[0]),m[h][1]+(R[4]-R[1]),m[h][2]+(R[5]-R[2])],texCoord:u[h]}]}return{geometry:g}},subbed=async(e,a,r,t,o,n="")=>{var i,l,c,s,f,h,p,m,u,d,g,y,v,R,A,b,E,_,x,F,T,M,P,I,w,S,C,L,B,U,N,k,O,D,z,V,G,Y,H,X,W,K,q,j,$,Q,Z,J,ee,ae,re,te,oe,ne,ie,le,ce,se,fe,he,pe,me,ue,de,ge,ye,ve=!1;if(!ve)for(var Re=e;Re--;)i=t,l=o,t=new Float32Array,o=new Float32Array,i.map(((e,a)=>{switch(p=e[c=0][0],m=e[c][1],u=e[c][2],l.length&&l[a].length>c&&(ye=l[a],w=ye[c][0],S=ye[c][1]),d=e[c=1][0],g=e[c][1],y=e[c][2],l.length&&l[a].length>c&&(C=ye[c][0],L=ye[c][1]),v=e[c=2][0],R=e[c][1],A=e[c][2],l.length&&l[a].length>c&&(B=ye[c][0],U=ye[c][1]),e.length>3&&(b=e[c=3][0],E=e[c][1],_=e[c][2],l.length&&l[a].length>c&&(N=ye[c][0],k=ye[c][1]),e.length>4&&(x=e[c=4][0],F=e[c][1],T=e[c][2],l.length&&l[a].length>c&&(O=ye[c][0],D=ye[c][1]),e.length>5&&(M=e[c=5][0],P=e[c][1],I=e[c][2],l.length&&l[a].length>c&&(z=ye[c][0],V=ye[c][1])))),G=(p+d)/2,Y=(m+g)/2,H=(u+y)/2,X=(d+v)/2,W=(g+R)/2,K=(y+A)/2,void 0!==w&&(ee=(w+C)/2,ae=(S+L)/2,re=(C+B)/2,te=(L+U)/2),me=new Float32Array,ue=new Float32Array,e.length){case 3:q=(v+p)/2,j=(R+m)/2,$=(A+u)/2,void 0!==w&&(oe=(B+w)/2,ne=(U+S)/2,s=w,f=S,ue=[...ue,[s,f]],s=ee,f=ae,ue=[...ue,[s,f]],s=oe,f=ne,ue=[...ue,[s,f]],o=[...o,ue],ue=new Float32Array,s=ee,f=ae,ue=[...ue,[s,f]],s=C,f=L,ue=[...ue,[s,f]],s=re,f=te,ue=[...ue,[s,f]],o=[...o,ue],ue=new Float32Array,s=oe,f=ne,ue=[...ue,[s,f]],s=re,f=te,ue=[...ue,[s,f]],s=B,f=U,ue=[...ue,[s,f]],o=[...o,ue],ue=new Float32Array,s=ee,f=ae,ue=[...ue,[s,f]],s=re,f=te,ue=[...ue,[s,f]],s=oe,f=ne,ue=[...ue,[s,f]],o=[...o,ue]),s=p,f=m,h=u,me=[...me,[s,f,h]],s=G,f=Y,h=H,me=[...me,[s,f,h]],s=q,f=j,h=$,me=[...me,[s,f,h]],t=[...t,me],me=new Float32Array,s=G,f=Y,h=H,me=[...me,[s,f,h]],s=d,f=g,h=y,me=[...me,[s,f,h]],s=X,f=W,h=K,me=[...me,[s,f,h]],t=[...t,me],me=new Float32Array,s=q,f=j,h=$,me=[...me,[s,f,h]],s=X,f=W,h=K,me=[...me,[s,f,h]],s=v,f=R,h=A,me=[...me,[s,f,h]],t=[...t,me],me=new Float32Array,s=G,f=Y,h=H,me=[...me,[s,f,h]],s=X,f=W,h=K,me=[...me,[s,f,h]],s=q,f=j,h=$,me=[...me,[s,f,h]],t=[...t,me];break;case 4:q=(v+b)/2,j=(R+E)/2,$=(A+_)/2,Q=(b+p)/2,Z=(E+m)/2,J=(_+u)/2,void 0!==w&&(oe=(B+N)/2,ne=(U+k)/2,ie=(N+w)/2,le=(k+S)/2,de=(w+C+B+N)/4,ge=(S+L+U+k)/4,s=w,f=S,ue=[...ue,[s,f]],s=ee,f=ae,ue=[...ue,[s,f]],s=de,f=ge,ue=[...ue,[s,f]],s=ie,f=le,ue=[...ue,[s,f]],o=[...o,ue],ue=new Float32Array,s=ee,f=ae,ue=[...ue,[s,f]],s=C,f=L,ue=[...ue,[s,f]],s=re,f=te,ue=[...ue,[s,f]],s=de,f=ge,ue=[...ue,[s,f]],o=[...o,ue],ue=new Float32Array,s=de,f=ge,ue=[...ue,[s,f]],s=re,f=te,ue=[...ue,[s,f]],s=B,f=U,ue=[...ue,[s,f]],s=oe,f=ne,ue=[...ue,[s,f]],o=[...o,ue],ue=new Float32Array,s=ie,f=le,ue=[...ue,[s,f]],s=de,f=ge,ue=[...ue,[s,f]],s=oe,f=ne,ue=[...ue,[s,f]],s=N,f=k,ue=[...ue,[s,f]],o=[...o,ue]),ce=(p+d+v+b)/4,se=(m+g+R+E)/4,fe=(u+y+A+_)/4,s=p,f=m,h=u,me=[...me,[s,f,h]],s=G,f=Y,h=H,me=[...me,[s,f,h]],s=ce,f=se,h=fe,me=[...me,[s,f,h]],s=Q,f=Z,h=J,me=[...me,[s,f,h]],t=[...t,me],me=new Float32Array,s=G,f=Y,h=H,me=[...me,[s,f,h]],s=d,f=g,h=y,me=[...me,[s,f,h]],s=X,f=W,h=K,me=[...me,[s,f,h]],s=ce,f=se,h=fe,me=[...me,[s,f,h]],t=[...t,me],me=new Float32Array,s=ce,f=se,h=fe,me=[...me,[s,f,h]],s=X,f=W,h=K,me=[...me,[s,f,h]],s=v,f=R,h=A,me=[...me,[s,f,h]],s=q,f=j,h=$,me=[...me,[s,f,h]],t=[...t,me],me=new Float32Array,s=Q,f=Z,h=J,me=[...me,[s,f,h]],s=ce,f=se,h=fe,me=[...me,[s,f,h]],s=q,f=j,h=$,me=[...me,[s,f,h]],s=b,f=E,h=_,me=[...me,[s,f,h]],t=[...t,me];break;case 5:ce=(p+d+v+b+x)/5,se=(m+g+R+E+F)/5,fe=(u+y+A+_+T)/5,void 0!==w&&(de=(w+C+B+N+O)/5,ge=(S+L+U+k+D)/5,oe=(B+N)/2,ne=(U+k)/2,ie=(N+O)/2,le=(k+D)/2,(O+w)/2,(D+S)/2,s=w,f=S,ue=[...ue,[s,f]],s=C,f=L,ue=[...ue,[s,f]],s=de,f=ge,ue=[...ue,[s,f]],o=[...o,ue],ue=new Float32Array,s=C,f=L,ue=[...ue,[s,f]],s=B,f=U,ue=[...ue,[s,f]],s=de,f=ge,ue=[...ue,[s,f]],o=[...o,ue],ue=new Float32Array,s=B,f=U,ue=[...ue,[s,f]],s=N,f=k,ue=[...ue,[s,f]],s=de,f=ge,ue=[...ue,[s,f]],o=[...o,ue],ue=new Float32Array,s=N,f=k,ue=[...ue,[s,f]],s=O,f=D,ue=[...ue,[s,f]],s=de,f=ge,ue=[...ue,[s,f]],o=[...o,ue],ue=new Float32Array,s=O,f=D,ue=[...ue,[s,f]],s=w,f=S,ue=[...ue,[s,f]],s=de,f=ge,ue=[...ue,[s,f]],o=[...o,ue],ue=new Float32Array),q=(v+b)/2,j=(R+E)/2,$=(A+_)/2,Q=(b+x)/2,Z=(E+F)/2,J=(_+T)/2,(x+p)/2,(F+m)/2,(T+u)/2,s=p,f=m,h=u,me=[...me,[s,f,h]],s=d,f=g,h=y,me=[...me,[s,f,h]],s=ce,f=se,h=fe,me=[...me,[s,f,h]],t=[...t,me],me=new Float32Array,s=d,f=g,h=y,me=[...me,[s,f,h]],s=v,f=R,h=A,me=[...me,[s,f,h]],s=ce,f=se,h=fe,me=[...me,[s,f,h]],t=[...t,me],me=new Float32Array,s=v,f=R,h=A,me=[...me,[s,f,h]],s=b,f=E,h=_,me=[...me,[s,f,h]],s=ce,f=se,h=fe,me=[...me,[s,f,h]],t=[...t,me],me=new Float32Array,s=b,f=E,h=_,me=[...me,[s,f,h]],s=x,f=F,h=T,me=[...me,[s,f,h]],s=ce,f=se,h=fe,me=[...me,[s,f,h]],t=[...t,me],me=new Float32Array,s=x,f=F,h=T,me=[...me,[s,f,h]],s=p,f=m,h=u,me=[...me,[s,f,h]],s=ce,f=se,h=fe,me=[...me,[s,f,h]],t=[...t,me],me=new Float32Array;break;case 6:ce=(p+d+v+b+x)/5,se=(m+g+R+E+F)/5,fe=(u+y+A+_+T)/5,void 0!==w&&(de=(w+C+B+N+O+z)/6,ge=(S+L+U+k+D+V)/6,oe=(B+N)/2,ne=(U+k)/2,ie=(N+O)/2,le=(k+D)/2,(O+z)/2,(D+V)/2,(z+w)/2,(V+S)/2,s=w,f=S,ue=[...ue,[s,f]],s=C,f=L,ue=[...ue,[s,f]],s=de,f=ge,ue=[...ue,[s,f]],o=[...o,ue],ue=new Float32Array,s=C,f=L,ue=[...ue,[s,f]],s=B,f=U,ue=[...ue,[s,f]],s=de,f=ge,ue=[...ue,[s,f]],o=[...o,ue],ue=new Float32Array,s=B,f=U,ue=[...ue,[s,f]],s=N,f=k,ue=[...ue,[s,f]],s=de,f=ge,ue=[...ue,[s,f]],o=[...o,ue],ue=new Float32Array,s=N,f=k,ue=[...ue,[s,f]],s=O,f=D,ue=[...ue,[s,f]],s=de,f=ge,ue=[...ue,[s,f]],o=[...o,ue],ue=new Float32Array,s=O,f=D,ue=[...ue,[s,f]],s=z,f=V,ue=[...ue,[s,f]],s=de,f=ge,ue=[...ue,[s,f]],o=[...o,ue],ue=new Float32Array,s=z,f=V,ue=[...ue,[s,f]],s=w,f=S,ue=[...ue,[s,f]],s=de,f=ge,ue=[...ue,[s,f]],o=[...o,ue],ue=new Float32Array),q=(v+b)/2,j=(R+E)/2,$=(A+_)/2,Q=(b+x)/2,Z=(E+F)/2,J=(_+T)/2,(x+M)/2,(F+P)/2,(T+I)/2,(M+p)/2,(P+m)/2,(I+u)/2,s=p,f=m,h=u,me=[...me,[s,f,h]],s=d,f=g,h=y,me=[...me,[s,f,h]],s=ce,f=se,h=fe,me=[...me,[s,f,h]],t=[...t,me],me=new Float32Array,s=d,f=g,h=y,me=[...me,[s,f,h]],s=v,f=R,h=A,me=[...me,[s,f,h]],s=ce,f=se,h=fe,me=[...me,[s,f,h]],t=[...t,me],me=new Float32Array,s=v,f=R,h=A,me=[...me,[s,f,h]],s=b,f=E,h=_,me=[...me,[s,f,h]],s=ce,f=se,h=fe,me=[...me,[s,f,h]],t=[...t,me],me=new Float32Array,s=b,f=E,h=_,me=[...me,[s,f,h]],s=x,f=F,h=T,me=[...me,[s,f,h]],s=ce,f=se,h=fe,me=[...me,[s,f,h]],t=[...t,me],me=new Float32Array,s=x,f=F,h=T,me=[...me,[s,f,h]],s=M,f=P,h=I,me=[...me,[s,f,h]],s=ce,f=se,h=fe,me=[...me,[s,f,h]],t=[...t,me],me=new Float32Array,s=M,f=P,h=I,me=[...me,[s,f,h]],s=p,f=m,h=u,me=[...me,[s,f,h]],s=ce,f=se,h=fe,me=[...me,[s,f,h]],t=[...t,me],me=new Float32Array}}));if(r){var Ae;he=r,pe=1-r;for(Re=2;Re--;)(Re?t:o).map((e=>{e.map((e=>{s=e[0],f=e[1],h=Re?e[2]:0,Ae=Math.hypot(s,f,h),s/=Ae,f/=Ae,h/=Ae,e[0]=s*=he+Ae*pe,e[1]=f*=he+Ae*pe,Re&&(e[2]=h*=he+Ae*pe)}))}))}return t.map(((e,a)=>({verts:e,uvs:o[a]})))},Camera=(e=0,a=0,r=0,t=0,o=0,n=0)=>({x:e,y:a,z:r,roll:t,pitch:o,yaw:n}),GeoSphere=(e,a,r,t,o)=>{let n,i,l,c,s,f,h,p,m,u,d,g,y,v,R=Array(t).fill().map((e=>(n=Rn()-.5,i=Rn()-.5,l=Rn()-.5,[n,i,l])));for(let e=99;e--;)R.map(((e,a)=>{n=e[0],i=e[1],l=e[2],R.map(((e,r)=>{r!=a&&(h=e[0],p=e[1],m=e[2],d=1+(Math.hypot(n-h,i-p,l-m)*(3+t/70)*3)**3,n+=9*(n-h)/d,i+=9*(i-p)/d,l+=9*(l-m)/d)})),d=Math.hypot(n,i,l),e[0]=n/d,e[1]=i/d,e[2]=l/d}));return u=6e6,R.map(((e,a)=>{c=e[0],s=e[1],f=e[2],R.map(((e,r)=>{h=e[0],p=e[1],m=e[2],a!=r&&(d=Math.hypot(g=c-h,y=s-p,v=f-m),d<u&&(u=d))}))})),g=new Float32Array,R.map(((e,a)=>{c=e[0],s=e[1],f=e[2],R.map(((e,r)=>{h=e[0],p=e[1],m=e[2],a!=r&&(d=Math.hypot(c-h,s-p,f-m),d<2*u&&(g.filter((e=>e[0]==h&&e[1]==p&&e[2]==m&&e[3]==c&&e[4]==s&&e[5]==f)).length||(g=[...g,[c*o,s*o,f*o,h*o,p*o,m*o]])))}))})),R.map((t=>{t[0]*=o/1.3333,t[1]*=o/1.3333,t[2]*=o/1.3333,t[0]+=e,t[1]+=a,t[2]+=r})),[e,a,r,o,R,g]},Cylinder=async(e=1,a=0,r=0,t=!1,o,n,i)=>{for(var l,c,s,f,h,p,m,u,d,g,y,v,R,A,b,E,_,x,F,T,M=new Float32Array,P=new Float32Array,I=0;I<n;I++)for(var w=I-.5,L=0;L<i;L++){l=S(2*Math.PI/i*L),c=1/n*w-.5,s=C(2*Math.PI/i*L),f=S(2*Math.PI/i*(L+1)),h=1/n*w-.5,p=C(2*Math.PI/i*(L+1)),m=S(2*Math.PI/i*(L+1)),u=1/n*(w+1)-.5,d=C(2*Math.PI/i*(L+1)),g=S(2*Math.PI/i*L),y=1/n*(w+1)-.5,v=C(2*Math.PI/i*L);var B=Math.atan2(l,s),U=Math.atan2(f,p),N=Math.atan2(m,d),k=Math.atan2(g,v);Math.abs(B-U)>Math.PI&&(B-=2*Math.PI,k-=2*Math.PI),R=(B+Math.PI)/Math.PI/2,A=c+.5,b=(U+Math.PI)/Math.PI/2,E=h+.5,_=(N+Math.PI)/Math.PI/2,x=u+.5,F=(k+Math.PI)/Math.PI/2,T=y+.5,M=[...M,[[l,c,s],[f,h,p],[m,u,d],[g,y,v]]],P=[...P,[[R,A],[b,E],[_,x],[F,T]]]}return await GeometryFromRaw(M,P,e/1.2,a,r,t,!0,o)},Torus=async(e=1,a=0,r=0,t=!1,o,n,i)=>{for(var l,c,s,f,h,p,m,u,d,g,y,v,R,A,b,E,_,x,F,T,M,P,I,w,L=new Float32Array,B=new Float32Array,U=4*n,N=.5,k=1.25,O=0;O<U;O++)for(var D=O+.5,z=0;z<i;z++){l=S(I=2*Math.PI/i*z)*N+k,c=C(I)*N,0,I=Math.atan2(l,0)+2*Math.PI/U*D+Math.PI/2,w=Math.hypot(l,0),s=S(I)*w,f=c,h=C(I)*w,l=S(I=2*Math.PI/i*(z+1))*N+k,c=C(I)*N,I=Math.atan2(l,0)+2*Math.PI/U*D+Math.PI/2,w=Math.hypot(l,0),p=S(I)*w,m=c,u=C(I)*w,l=S(I=2*Math.PI/i*(z+1))*N+k,c=C(I)*N,I=Math.atan2(l,0)+2*Math.PI/U*(D+1)+Math.PI/2,w=Math.hypot(l,0),d=S(I)*w,g=c,y=C(I)*w,l=S(I=2*Math.PI/i*z)*N+k,c=C(I)*N,I=Math.atan2(l,0)+2*Math.PI/U*(D+1)+Math.PI/2,w=Math.hypot(l,0),v=S(I)*w,R=c,A=C(I)*w;var V=Math.atan2(s,h),G=Math.atan2(p,u),Y=Math.atan2(d,y),H=Math.atan2(v,A);Math.abs(V-Y)>Math.PI&&(Y+=2*Math.PI,H+=2*Math.PI),b=(V+Math.PI)/Math.PI/2,E=f+.5,_=(G+Math.PI)/Math.PI/2,x=m+.5,F=(Y+Math.PI)/Math.PI/2,T=g+.5,M=(H+Math.PI)/Math.PI/2,P=R+.5,L=[...L,[[s,f,h],[p,m,u],[d,g,y],[v,R,A]]],B=[...B,[[b,E],[_,x],[F,T],[M,P]]]}return await GeometryFromRaw(L,B,e/1.2,a,r,t,!0,o)},TorusKnot=async(e=1,a=0,r=0,t=!1,o,n,i)=>{var l,c,s,f,h,p,m,u,d,g,y,v,R,A,b,E,_,x,F,T,M,P,I,w,L,B=new Float32Array,U=new Float32Array,N=8*n;i/=1;for(var k,O,D,z,V,G,Y,H=.75,X=0;X<2*N;X++)for(var W=0;W<i;W++){var K=X+.5,q=X+1.5,j=X+2.5;f=3+S(k=2*Math.PI*1.5*1/N*K)/1,h=G=2*C(k),m=3+S(O=2*Math.PI*1.5*1/N*q)/1,u=Y=2*C(O),g=3+S(D=2*Math.PI*1.5*1/N*j)/1,y=2*C(D),z=(Math.acos((u-h)/(Math.hypot(m-f,u-h)+1e-4))-Math.PI/2)/2,V=(Math.acos((y-u)/(Math.hypot(g-m,y-u)+1e-4))-Math.PI/2)/2;var $=3+S(k)/1;l=S(w=2*Math.PI/i*W)*H+$,c=C(w)*H+G,s=0,w=Math.atan2(c,s)+z,L=Math.hypot(c,s),c=S(w)*L,s=C(w)*L,w=Math.atan2(l,s)+2*Math.PI/N*K+Math.PI/2,L=Math.hypot(l,s),f=S(w)*L,h=c,p=C(w)*L,l=S(w=2*Math.PI/i*(W+1))*H+$,c=C(w)*H+G,s=0,w=Math.atan2(c,s)+z,L=Math.hypot(c,s),c=S(w)*L,s=C(w)*L,w=Math.atan2(l,s)+2*Math.PI/N*K+Math.PI/2,L=Math.hypot(l,s),m=S(w)*L,u=c,d=C(w)*L,$=3+S(O)/1,l=S(w=2*Math.PI/i*(W+1))*H+$,c=C(w)*H+Y,s=0,w=Math.atan2(c,s)+V,L=Math.hypot(c,s),c=S(w)*L,s=C(w)*L,w=Math.atan2(l,s)+2*Math.PI/N*q+Math.PI/2,L=Math.hypot(l,s),g=S(w)*L,y=c,v=C(w)*L,l=S(w=2*Math.PI/i*W)*H+$,c=C(w)*H+Y,s=0,w=Math.atan2(c,s)+V,L=Math.hypot(c,s),c=S(w)*L,s=C(w)*L,w=Math.atan2(l,s)+2*Math.PI/N*q+Math.PI/2,L=Math.hypot(l,s),R=S(w)*L,A=c,b=C(w)*L;var Q=Math.atan2(f,p),Z=Math.atan2(m,d),J=Math.atan2(g,v),ee=Math.atan2(R,b);Math.abs(Q-J)>Math.PI&&(J+=2*Math.PI,ee+=2*Math.PI),E=(Q+Math.PI)/Math.PI/2,_=h+.5,x=(Z+Math.PI)/Math.PI/2,F=u+.5,T=(J+Math.PI)/Math.PI/2,M=y+.5,P=(ee+Math.PI)/Math.PI/2,I=A+.5,B=[...B,[[f,h,p],[m,u,d],[g,y,v],[R,A,b]]],U=[...U,[[E,_],[x,F],[T,M],[P,I]]]}return await GeometryFromRaw(B,U,e/1.2,a,r,t,!0,o)},Tetrahedron=async(e=1,a=0,r=0,t=!1,o)=>{new Float32Array;var n,i,l,c,s,f,h,p,m,u,d,g,y,v=new Float32Array;g=new Float32Array;let R=1/1.4142/1.25;for(u=3;u--;)n=1*S(c=2*Math.PI/3*u)/1.25,i=1*C(c)/1.25,l=R,g=[...g,[n,i,l]];for(v=[...v,g],d=3;d--;)g=new Float32Array,n=0,i=0,l=-R,g=[...g,[n,i,l]],n=1*S(c=2*Math.PI/3*d)/1.25,i=1*C(c)/1.25,l=R,g=[...g,[n,i,l]],n=1*S(c=2*Math.PI/3*(d+1))/1.25,i=1*C(c)/1.25,l=R,g=[...g,[n,i,l]],v=[...v,g];h=p=m=y=0,v.map((e=>{e.map((e=>{h+=e[0],p+=e[1],m+=e[2],y++}))})),h/=y,p/=y,m/=y,v.map((e=>{e.map((e=>{e[0]-=h,e[1]-=p,e[2]-=m}))}));var A=v,b=new Float32Array;for(u=0;u<A.length;u++){g=new Float32Array;for(var E=A[u].length;E--;){switch(E){case 0:s=0,f=0;break;case 1:s=1,f=0;break;case 2:s=1,f=1;break;case 3:s=0,f=.5;break;case 4:s=0,f=1}g=[...g,[s,f]]}b=[...b,g]}return await GeometryFromRaw(A,b,e,a,r,t,!1,o)},Octahedron=async(e=1,a=0,r=0,t=!1,o)=>{new Float32Array;var n,i,l,c,s,f,h,p,m,u=new Float32Array;for(p=8;p--;)m=new Float32Array,n=0,i=0,l=.8*(p<4?-1:1),m=[...m,[n,i,l]],n=1*S(c=2*Math.PI/4*p)/1.25,i=1*C(c)/1.25,l=0,m=[...m,[n,i,l]],n=1*S(c=2*Math.PI/4*(p+1))/1.25,i=1*C(c)/1.25,l=0,m=[...m,[n,i,l]],u=[...u,m];var d=u,g=new Float32Array;for(h=0;h<d.length;h++){m=new Float32Array;for(var y=d[h].length;y--;){switch(y){case 0:s=0,f=0;break;case 1:s=1,f=0;break;case 2:s=1,f=1;break;case 3:s=0,f=.5;break;case 4:s=0,f=1}m=[...m,[s,f]]}g=[...g,m]}return await GeometryFromRaw(d,g,e,a,r,t,!1,o)},Icosahedron=async(e=1,a=0,r=0,t=!1,o)=>{new Float32Array;var n,i,l,c,s,f,h,p,m,u,d,g,y,v,R,A=new Float32Array;for(p=[[-(h=.5+5**.5/2),-1,0],[h,-1,0],[h,1,0],[-h,1,0]],f=3;f--;A=[...A,i])for(i=[],n=4;n--;)i=[...i,[p[n][f],p[n][(f+1)%3],p[n][(f+2)%3]]];A.map((e=>{e.map((e=>{e[0]*=1/2.25,e[1]*=1/2.25,e[2]*=1/2.25}))})),m=JSON.parse(JSON.stringify(A)),s=[],p=new Float32Array,[[[0,3],[1,0],[2,2]],[[0,3],[1,0],[1,3]],[[0,3],[2,3],[1,3]],[[0,2],[2,1],[1,0]],[[0,2],[1,3],[1,0]],[[0,2],[1,3],[2,0]],[[0,3],[2,2],[0,0]],[[1,0],[2,2],[2,1]],[[1,1],[2,2],[2,1]],[[1,1],[2,2],[0,0]],[[1,1],[2,1],[0,1]],[[0,2],[2,1],[0,1]],[[2,0],[1,2],[2,3]],[[0,0],[0,3],[2,3]],[[1,3],[2,0],[2,3]],[[2,3],[0,0],[1,2]],[[1,2],[2,0],[0,1]],[[0,0],[1,2],[1,1]],[[0,1],[1,2],[1,1]],[[0,2],[2,0],[0,1]]].map((e=>{u=e[0][0],d=e[1][0],g=e[2][0],y=e[0][1],v=e[1][1],R=e[2][1],p=[...p,[m[u][y],m[d][v],m[g][R]]]}));var b=s=[...s,...p],E=new Float32Array;for(n=0;n<b.length;n++){p=new Float32Array;for(var _=b[n].length;_--;){switch(_){case 0:l=0,c=0;break;case 1:l=1,c=0;break;case 2:l=1,c=1;break;case 3:l=0,c=.5;break;case 4:l=0,c=1}p=[...p,[l,c]]}E=[...E,p]}return await GeometryFromRaw(b,E,e,a,r,t,!1,o)},Dodecahedron=async(e=1,a=0,r=0,t=!1,o)=>{var n,i,l,c,s,f,h,p,m,u,d=new Float32Array,g=new Float32Array;let y=-6e6;for(u=5;u--;)n=S(f=2*Math.PI/5*u+Math.PI/5),i=C(f),l=0,i>y&&(y=i),g=[...g,[n,i,l]];g=g.map((e=>(n=e[0],i=e[1]-=y,l=e[2],R(n,i,l,{x:0,y:0,z:0,roll:0,pitch:.553573,yaw:0})))),(s=structuredClone(g)).map((e=>{e[1]*=-1})),d=[...d,g,s],y=-6e6,d.map((e=>{e.map((e=>{n=e[0],i=e[1],(l=e[2])>y&&(y=l)}))})),c=Math.hypot(d[0][0][0]-d[0][1][0],d[0][0][1]-d[0][1][1],d[0][0][2]-d[0][1][2]),d.map((e=>{e.map((e=>{e[2]-=y+c/2}))})),(s=structuredClone(d)).map((e=>{e.map((e=>{e[2]*=-1}))})),d=[...d,...s],(s=structuredClone(d)).map((e=>{e.map((e=>{n=e[0],i=e[1],l=e[2],h=R(n,i,l,{x:0,y:0,z:0,roll:0,pitch:0,yaw:Math.PI/2}),h=R(h[0],h[1],h[2],{x:0,y:0,z:0,roll:0,pitch:Math.PI/2,yaw:0}),e[0]=h[0],e[1]=h[1],e[2]=h[2]}))})),(v=structuredClone(d)).map((e=>{e.map((e=>{n=e[0],i=e[1],l=e[2],h=R(n,i,l,{x:0,y:0,z:0,roll:0,pitch:0,yaw:Math.PI/2}),h=R(h[0],h[1],h[2],{x:0,y:0,z:0,roll:Math.PI/2,pitch:0,yaw:0}),e[0]=h[0],e[1]=h[1],e[2]=h[2]}))}));var v=d=[...d,...s,...v],A=new Float32Array;for(u=0;u<v.length;u++){g=new Float32Array;for(var b=v[u].length;b--;){switch(b){case 0:p=0,m=0;break;case 1:p=1,m=0;break;case 2:p=1,m=1;break;case 3:p=0,m=.5;break;case 4:p=0,m=1}g=[...g,[p,m]]}A=[...A,g]}return await GeometryFromRaw(v,A,e/Math.max(1,2-r),a,r,t,!1,o)},Cube=async(e=1,a=0,r=0,t=!1,o)=>{var n,i,l,c,s,f,h,p,m=Math.PI,u=(new Float32Array,new Float32Array);for(s=6;s--;u=[...u,l])for(l=[],f=4;f--;)l=[...l,[(i=[S(n=2*m/4*f+m/4),C(n),2**.5/2])[s%3]*(c=s<3?1:-1),i[(s+1)%3]*c,i[(s+2)%3]*c]];var d=new Float32Array;for(s=0;s<u.length;s++){i=new Float32Array;for(var g=u[s].length;g--;){switch(g){case 0:h=0,p=0;break;case 1:h=1,p=0;break;case 2:h=1,p=1;break;case 3:h=0,p=1}i=[...i,[h,p]]}d=[...d,i]}return await GeometryFromRaw(u,d,e/1.2,a,r,t,!0,o)},Rectangle=async(e=1,a=0,r=0,t=!1,o)=>{Math.PI,new Float32Array;var n=new Float32Array;n=[[[-1,-1,0],[1,-1,0],[1,1,0],[-1,1,0]]];return await GeometryFromRaw(n,[[[0,0],[1,0],[1,1],[0,1]]],e/1.5,Math.max("sprite"==o?1:2,a),r,t,!0,o)},IsPowerOf2=(e,a=0)=>!(a>300)&&(2==e||IsPowerOf2(e/2,a+1)),Normal=(e,a=!1,r=0,t=0,o=0)=>{var n,i,l=0,c=0,s=0;e.map((e=>{l+=e[0],c+=e[1],s+=e[2]})),l/=e.length,c/=e.length,s/=e.length;var f=e[2][0]-e[1][0],h=e[2][1]-e[1][1],p=e[2][2]-e[1][2],m=e[1][0]-e[0][0],u=e[1][1]-e[0][1],d=e[1][2]-e[0][2];n=[h*d-p*u,p*m-f*d,f*u-h*m],i=Math.hypot(...n)+1e-4;n=n.map((e=>e/i*1));var g=l,y=c,v=s,R=1;if(a){var A=Math.hypot(g-r,y-t,v-o);R=Math.hypot(r-(l+n[0]/99),t-(c+n[1]/99),o-(s+n[2]/99))>A?-1:1}return[g,y,v,l+(n[0]*=R),c+(n[1]*=R),s+(n[2]*=R)]},AnimationLoop=(e,a)=>{const r=async()=>{if(e.ready&&void 0!==window[a]&&await window[a](),e.alphaQueue.length){var t,o=new Float32Array;e.ctx.blendFunc(e.ctx.SRC_ALPHA,e.ctx.ONE),e.ctx.enable(e.ctx.BLEND),e.alphaQueue.map(((a,r)=>{var n=a.x+e.x,i=a.y+e.y,l=a.z+e.z;t=R(n,i,l,{roll:e.roll,pitch:e.pitch,yaw:e.yaw},!1);var c=e.z/1e3*Math.pow(5,Math.log(e.fov)/1.609438);o=[...o,{idx:r,z:c+t[2]}]})),o.sort(((e,a)=>a.z-e.z)),e.alphaQueue.map((async(a,r)=>{var t=e.alphaQueue[o[r].idx];t.disableDepthTest&&e.ctx.disable(e.ctx.DEPTH_TEST);for(var n=t.penumbra,i=1+(t.isParticle&&n?1:0);i--;)await e.Draw(t,!0,t.isParticle&&n&&!i);t.disableDepthTest&&e.ctx.enable(e.ctx.DEPTH_TEST)})),e.ctx.blendFunc(e.ctx.ONE,e.ctx.ZERO),e.ctx.disable(e.ctx.BLEND)}e.t+=1/60,requestAnimationFrame(r),e.alphaQueue=new Float32Array};window.addEventListener("load",(()=>{e.ready=!0,r()}))},RGBToHSV=(e,a,r)=>HSVFromRGB(e,a,r),HSVFromRGB=(e,a,r)=>{let t=e/255,o=a/255,n=r/255,i=Math.min(t,o,n),l=Math.max(t,o,n),c=l,s=l-i,f=l?s/l:0,h=Math.min(e,a,r),p=Math.max(e,a,r),m=0;for(s&&(e>=a&&e>=r&&(m=(a-r)/(p-h)),a>=e&&a>=r&&(m=2+(r-e)/(p-h)),r>=a&&r>=e&&(m=4+(e-a)/(p-h))),m*=60;m<0;)m+=360;for(;m>=360;)m-=360;return[m,f,c]},HSVToHex=(e,a,r)=>HexFromHSV(e,a,r),HexFromHSV=(e,a,r)=>{let t=RGBFromHSV(e,a,r);return RGBToHex(...t)},HSVToRGB=(e,a,r)=>RGBFromHSV(e,a,r),RGBFromHSV=(e,a,r)=>{for(;e<0;)e+=360;for(;e>=360;)e-=360;let t,o,n,i=r*a,l=i*(1-Math.abs(e/60%2-1)),c=r-i;return e>=0&&e<60&&(t=i,o=l,n=0),e>=60&&e<120&&(t=l,o=i,n=0),e>=120&&e<180&&(t=0,o=i,n=l),e>=180&&e<240&&(t=0,o=l,n=i),e>=240&&e<300&&(t=l,o=0,n=i),e>=300&&e<360&&(t=i,o=0,n=l),[255*(t+c),255*(o+c),255*(n+c)]},HexFromRGB=(e,a,r)=>RGBToHex(e,a,r),RGBToHex=(e,a,r)=>{let t="0123456789abcdef",o="";return o+=t[e/16|0],o+=t[e-16*(e/16|0)|0],o+=t[a/16|0],o+=t[a-16*(a/16|0)|0],o+=t[r/16|0],o+=t[r-16*(r/16|0)|0],Number("0x"+o)},RGBFromHex=e=>HexToRGB(e),HexToRGB=e=>[e/256**3-(e/256**3|0),e/65536-(e/65536|0),e/256-(e/256|0)],getParams=e=>{var a=[];["COPY_READ_BUFFER_BINDING","COPY_WRITE_BUFFER_BINDING","DRAW_BUFFERi","DRAW_FRAMEBUFFER_BINDING","FRAGMENT_SHADER_DERIVATIVE_HINT","MAX_3D_TEXTURE_SIZE","MAX_ARRAY_TEXTURE_LAYERS","MAX_CLIENT_WAIT_TIMEOUT_WEBGL","MAX_COLOR_ATTACHMENTS","MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","MAX_COMBINED_UNIFORM_BLOCKS","MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","MAX_DRAW_BUFFERS","MAX_ELEMENT_INDEX","MAX_ELEMENTS_INDICES","MAX_ELEMENTS_VERTICES","MAX_FRAGMENT_INPUT_COMPONENTS","MAX_FRAGMENT_UNIFORM_BLOCKS","MAX_FRAGMENT_UNIFORM_COMPONENTS","MAX_PROGRAM_TEXEL_OFFSET","MAX_SAMPLES","MAX_SERVER_WAIT_TIMEOUT","MAX_TEXTURE_LOD_BIAS","MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","MAX_UNIFORM_BLOCK_SIZE","MAX_UNIFORM_BUFFER_BINDINGS","MAX_VARYING_COMPONENTS","MAX_VERTEX_OUTPUT_COMPONENTS","MAX_VERTEX_UNIFORM_BLOCKS","MAX_VERTEX_UNIFORM_COMPONENTS","MIN_PROGRAM_TEXEL_OFFSET","PACK_ROW_LENGTH","PACK_SKIP_PIXELS","PACK_SKIP_ROWS","PIXEL_PACK_BUFFER_BINDING","PIXEL_UNPACK_BUFFER_BINDING","RASTERIZER_DISCARD","READ_BUFFER","READ_FRAMEBUFFER_BINDING","SAMPLE_ALPHA_TO_COVERAGE","SAMPLE_COVERAGE","SAMPLER_BINDING","TEXTURE_BINDING_2D_ARRAY","TEXTURE_BINDING_3D","TRANSFORM_FEEDBACK_ACTIVE","TRANSFORM_FEEDBACK_BINDING","TRANSFORM_FEEDBACK_BUFFER_BINDING","TRANSFORM_FEEDBACK_PAUSED","UNIFORM_BUFFER_BINDING","UNIFORM_BUFFER_OFFSET_ALIGNMENT","UNPACK_IMAGE_HEIGHT","UNPACK_ROW_LENGTH","UNPACK_SKIP_IMAGES","UNPACK_SKIP_PIXELS","UNPACK_SKIP_ROWS","VERTEX_ARRAY_BINDING"].map((r=>{a.push({name:r,val:e.getParameter(e[r])})}));var r=document.createElement("div");r.style.position="fixed",r.style.zIndex=1e5,r.style.left="50%",r.style.top="50%",r.style.transform="translate(-50%, -50%)",r.style.background="#0008",r.style.padding="20px",r.style.width="600px",r.style.height="350px",r.style.border="1px solid #fff4",r.style.borderRadius="5px",r.style.fontFamily="monospace",r.style.fontSize="20px",r.style.color="#fff";var t=document.createElement("div");t.style.fontSize="24px",t.style.color="#0f8c",t.innerHTML="rendering context parameters<br><br>",r.appendChild(t);var o=document.createElement("div");o.style.minWidth="100%",o.style.height="250px",o.style.background="#333",o.style.border="1px solid #fff4",o.style.overflowY="auto",o.style.wordWrap="break-word",o.style.color="#888",o.style.fontSize="10px",r.appendChild(o);var n=document.createElement("button");n.style.border="none",n.style.padding="3px",n.style.cursor="pointer",n.fontSize="20px",n.style.borderRadius="10px",n.style.margin="10px",n.style.minWidth="100px",n.innerHTML="📋 copy",n.title="copy shape data to clipboard",n.onclick=()=>{var e=document.createRange();e.selectNode(o),window.getSelection().removeAllRanges(),window.getSelection().addRange(e),document.execCommand("copy"),window.getSelection().removeAllRanges(),n.innerHTML="COPIED!",setTimeout((()=>{n.innerHTML="📋 copy"}),1e3)},r.appendChild(n);var i=document.createElement("button");i.onclick=()=>r.remove(),i.style.border="none",i.style.padding="3px",i.style.cursor="pointer",i.fontSize="20px",i.style.borderRadius="10px",i.style.margin="10px",i.style.background="#faa",i.style.minWidth="100px",i.innerHTML="close",r.appendChild(i),o.innerHTML=JSON.stringify(a),document.body.appendChild(r)};export{Renderer,LoadGeometry,BasicShader,DestroyViewport,DestroyShape,AnimationLoop,Tetrahedron,Cube,Octahedron,Icosahedron,Dodecahedron,Cylinder,Torus,TorusKnot,Rectangle,Q,R,SyncNormals,Normal,ImageToPo2,LoadOBJ,IsPowerOf2,RGBToHSV,HSVToHex,HexFromHSV,HSVToRGB,RGBFromHSV,HexFromRGB,RGBToHex,RGBFromHex,HexToRGB,GeoSphere};

